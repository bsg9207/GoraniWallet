{"version":3,"file":"static/js/44.1e72bab9.chunk.js","mappings":"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","sources":["../../node_modules/@libp2p/logger/node_modules/debug/src/browser.js","../../node_modules/@libp2p/logger/node_modules/debug/src/common.js","../../node_modules/@libp2p/logger/node_modules/ms/index.js","../../node_modules/@protobufjs/aspromise/index.js","../../node_modules/@protobufjs/base64/index.js","../../node_modules/@protobufjs/eventemitter/index.js","../../node_modules/@protobufjs/float/index.js","../../node_modules/@protobufjs/inquire/index.js","../../node_modules/@protobufjs/pool/index.js","../../node_modules/@protobufjs/utf8/index.js","../../node_modules/any-signal/index.js","../../node_modules/blob-to-it/index.js","../../node_modules/browser-readablestream-to-it/index.js","../../node_modules/dag-jose/src/encryption.ts","../../node_modules/dag-jose/src/index.ts","../../node_modules/dag-jose/src/signing.ts","../../node_modules/dag-jose/src/utils.ts","../../node_modules/err-code/index.js","../../node_modules/ipfs-utils/node_modules/native-fetch/src/index.js","../../node_modules/ipfs-utils/node_modules/node-fetch/browser.js","../../node_modules/ipfs-utils/src/env.js","../../node_modules/ipfs-utils/src/fetch.browser.js","../../node_modules/ipfs-utils/src/files/url-source.js","../../node_modules/ipfs-utils/src/http.js","../../node_modules/ipfs-utils/src/http/error.js","../../node_modules/ipfs-utils/src/http/fetch.browser.js","../../node_modules/is-electron/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/iso-url/index.js","../../node_modules/iso-url/src/relative.js","../../node_modules/iso-url/src/url-browser.js","../../node_modules/it-all/index.js","../../node_modules/it-first/index.js","../../node_modules/it-last/index.js","../../node_modules/it-map/index.js","../../node_modules/it-peekable/index.js","../../node_modules/merge-options/index.js","../../node_modules/protobufjs/minimal.js","../../node_modules/protobufjs/src/index-minimal.js","../../node_modules/protobufjs/src/reader.js","../../node_modules/protobufjs/src/reader_buffer.js","../../node_modules/protobufjs/src/roots.js","../../node_modules/protobufjs/src/rpc.js","../../node_modules/protobufjs/src/rpc/service.js","../../node_modules/protobufjs/src/util/longbits.js","../../node_modules/protobufjs/src/util/minimal.js","../../node_modules/protobufjs/src/writer.js","../../node_modules/protobufjs/src/writer_buffer.js","../../node_modules/stream-to-it/source.js","../../node_modules/varint/decode.js","../../node_modules/varint/encode.js","../../node_modules/varint/index.js","../../node_modules/varint/length.js","../../node_modules/@babel/runtime/helpers/AsyncGenerator.js","../../node_modules/@babel/runtime/helpers/OverloadYield.js","../../node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js","../../node_modules/@babel/runtime/helpers/asyncIterator.js","../../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js","../../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js","../../node_modules/cborg/esm/lib/0uint.js","../../node_modules/cborg/esm/lib/1negint.js","../../node_modules/cborg/esm/lib/2bytes.js","../../node_modules/cborg/esm/lib/3string.js","../../node_modules/cborg/esm/lib/4array.js","../../node_modules/cborg/esm/lib/5map.js","../../node_modules/cborg/esm/lib/6tag.js","../../node_modules/cborg/esm/lib/7float.js","../../node_modules/cborg/esm/lib/byte-utils.js","../../node_modules/cborg/esm/lib/common.js","../../node_modules/cborg/esm/lib/decode.js","../../node_modules/cborg/esm/lib/is.js","../../node_modules/cborg/esm/lib/bl.js","../../node_modules/cborg/esm/lib/encode.js","../../node_modules/cborg/esm/lib/jump.js","../../node_modules/cborg/esm/lib/token.js","../../node_modules/dag-jose/node_modules/@ipld/dag-cbor/esm/index.js","../../node_modules/ipfs-core-utils/src/multibases.js","../../node_modules/ipfs-core-utils/src/multicodecs.js","../../node_modules/ipfs-core-utils/src/multihashes.js","../../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../../node_modules/@ipld/dag-pb/esm/src/util.js","../../node_modules/@ipld/dag-pb/esm/src/index.js","../../node_modules/@ipld/dag-cbor/esm/index.js","../../node_modules/multiformats/esm/src/hashes/hasher.js","../../node_modules/cborg/esm/lib/json/encode.js","../../node_modules/cborg/esm/lib/json/decode.js","../../node_modules/@ipld/dag-json/esm/index.js","../../node_modules/multiformats/esm/src/hashes/identity.js","../../node_modules/multiformats/esm/src/bases/identity.js","../../node_modules/multiformats/esm/src/bases/base2.js","../../node_modules/multiformats/esm/src/bases/base8.js","../../node_modules/multiformats/esm/src/bases/base10.js","../../node_modules/multiformats/esm/src/bases/base16.js","../../node_modules/multiformats/esm/src/bases/base36.js","../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../node_modules/multiformats/esm/src/codecs/raw.js","../../node_modules/multiformats/esm/src/codecs/json.js","../../node_modules/multiformats/esm/src/basics.js","../../node_modules/ip-regex/index.js","../../node_modules/function-timeout/browser.js","../../node_modules/clone-regexp/node_modules/is-regexp/index.js","../../node_modules/clone-regexp/index.js","../../node_modules/super-regex/index.js","../../node_modules/is-ip/index.js","../../node_modules/uint8arrays/esm/src/util/as-uint8array.js","../../node_modules/uint8arrays/esm/src/alloc.js","../../node_modules/uint8arrays/esm/src/util/bases.js","../../node_modules/uint8arrays/esm/src/to-string.js","../../node_modules/@multiformats/multiaddr/src/ip.ts","../../node_modules/@multiformats/multiaddr/src/protocols-table.ts","../../node_modules/uint8arrays/esm/src/from-string.js","../../node_modules/uint8arrays/esm/src/concat.js","../../node_modules/@multiformats/multiaddr/src/convert.ts","../../node_modules/@multiformats/multiaddr/src/codec.ts","../../node_modules/@multiformats/multiaddr/src/index.ts","../../node_modules/uint8arrays/esm/src/equals.js","../../node_modules/parse-duration/index.mjs","../../node_modules/@libp2p/logger/src/index.ts","../../node_modules/merge-options/index.mjs","../../src/parse.ts","../../src/parser.ts","../../src/is-ip.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/vendor/base-x.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bytes.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/identity.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base2.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base8.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base10.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base16.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base32.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base36.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base58.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base64.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/bases/base256emoji.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/vendor/varint.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/varint.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/hashes/digest.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/hashes/hasher.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/hashes/sha2-browser.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/hashes/identity.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/codecs/raw.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/codecs/json.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/cid.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/multiformats/src/basics.js","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/util/as-uint8array.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/alloc.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/util/bases.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/to-string.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/src/ip.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/src/protocols-table.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/from-string.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/concat.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/src/convert.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/src/codec.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/@multiformats/multiaddr/src/index.ts","../../node_modules/@multiformats/multiaddr-to-uri/node_modules/uint8arrays/src/equals.ts","../../node_modules/@multiformats/multiaddr-to-uri/src/index.ts","../../node_modules/ipfs-core-utils/src/to-url-string.js","../../node_modules/ipfs-core-utils/src/agent.browser.js","../../node_modules/ipfs-http-client/src/lib/core.js","../../node_modules/ipfs-http-client/src/lib/configure.js","../../node_modules/ipfs-http-client/src/lib/mode-to-string.js","../../node_modules/ipfs-http-client/src/lib/parse-mtime.js","../../node_modules/ipfs-http-client/src/lib/to-url-search-params.js","../../node_modules/ipfs-http-client/src/bitswap/wantlist.js","../../node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/vendor/varint.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/varint.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bytes.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/hashes/digest.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/vendor/base-x.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base58.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base32.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/cid.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/identity.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base2.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base8.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base10.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base16.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base36.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base64.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/bases/base256emoji.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/hashes/hasher.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/hashes/sha2-browser.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/hashes/identity.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/codecs/raw.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/codecs/json.js","../../node_modules/@libp2p/peer-id/node_modules/multiformats/src/basics.js","../../node_modules/@libp2p/peer-id/node_modules/uint8arrays/src/equals.ts","../../node_modules/@libp2p/interface-peer-id/src/index.ts","../../node_modules/@libp2p/peer-id/src/index.ts","../../node_modules/ipfs-http-client/src/bitswap/stat.js","../../node_modules/ipfs-http-client/src/bitswap/unwant.js","../../node_modules/ipfs-http-client/src/bitswap/index.js","../../node_modules/ipfs-http-client/src/block/get.js","../../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../node_modules/ipfs-core-utils/src/files/utils.js","../../node_modules/ipfs-core-utils/src/files/normalise-content.browser.js","../../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../../node_modules/ipfs-core-utils/node_modules/ipfs-unixfs/esm/src/unixfs.js","../../node_modules/ipfs-core-utils/node_modules/ipfs-unixfs/esm/src/index.js","../../node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js","../../node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js","../../node_modules/ipfs-core-utils/src/mode-to-string.js","../../node_modules/ipfs-core-utils/src/multipart-request.browser.js","../../node_modules/ipfs-http-client/src/lib/abort-signal.js","../../node_modules/ipfs-http-client/src/block/put.js","../../node_modules/ipfs-http-client/src/block/rm.js","../../node_modules/ipfs-http-client/src/block/stat.js","../../node_modules/ipfs-http-client/src/block/index.js","../../node_modules/ipfs-http-client/src/bootstrap/add.js","../../node_modules/ipfs-http-client/src/bootstrap/clear.js","../../node_modules/ipfs-http-client/src/bootstrap/list.js","../../node_modules/ipfs-http-client/src/bootstrap/reset.js","../../node_modules/ipfs-http-client/src/bootstrap/rm.js","../../node_modules/ipfs-http-client/src/bootstrap/index.js","../../node_modules/ipfs-http-client/src/config/profiles/apply.js","../../node_modules/ipfs-http-client/src/lib/object-to-camel.js","../../node_modules/ipfs-http-client/src/config/profiles/list.js","../../node_modules/ipfs-http-client/src/config/profiles/index.js","../../node_modules/ipfs-http-client/src/config/get.js","../../node_modules/ipfs-http-client/src/config/get-all.js","../../node_modules/ipfs-http-client/src/config/replace.js","../../node_modules/ipfs-http-client/src/config/set.js","../../node_modules/ipfs-http-client/src/config/index.js","../../node_modules/ipfs-http-client/src/dag/export.js","../../node_modules/ipfs-http-client/src/lib/resolve.js","../../node_modules/ipfs-http-client/src/dag/get.js","../../node_modules/ipfs-http-client/src/dag/import.js","../../node_modules/ipfs-http-client/src/dag/put.js","../../node_modules/ipfs-http-client/src/dag/resolve.js","../../node_modules/ipfs-http-client/src/dag/index.js","../../node_modules/ipfs-http-client/src/dht/response-types.js","../../node_modules/ipfs-http-client/src/dht/map-event.js","../../node_modules/ipfs-http-client/src/dht/find-peer.js","../../node_modules/ipfs-http-client/src/dht/find-provs.js","../../node_modules/ipfs-http-client/src/dht/get.js","../../node_modules/ipfs-http-client/src/dht/provide.js","../../node_modules/ipfs-http-client/src/dht/put.js","../../node_modules/ipfs-http-client/src/dht/query.js","../../node_modules/ipfs-http-client/src/dht/index.js","../../node_modules/ipfs-http-client/src/diag/cmds.js","../../node_modules/ipfs-http-client/src/diag/net.js","../../node_modules/ipfs-http-client/src/diag/sys.js","../../node_modules/ipfs-http-client/src/diag/index.js","../../node_modules/ipfs-http-client/src/files/chmod.js","../../node_modules/ipfs-http-client/src/files/cp.js","../../node_modules/ipfs-http-client/src/files/flush.js","../../node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js","../../node_modules/ipfs-http-client/src/files/ls.js","../../node_modules/ipfs-http-client/src/files/mkdir.js","../../node_modules/ipfs-http-client/src/files/mv.js","../../node_modules/ipfs-http-client/src/files/read.js","../../node_modules/ipfs-http-client/src/files/rm.js","../../node_modules/ipfs-http-client/src/files/stat.js","../../node_modules/ipfs-http-client/src/files/touch.js","../../node_modules/ipfs-http-client/src/files/write.js","../../node_modules/ipfs-http-client/src/files/index.js","../../node_modules/ipfs-http-client/src/key/export.js","../../node_modules/ipfs-http-client/src/key/gen.js","../../node_modules/ipfs-http-client/src/key/import.js","../../node_modules/ipfs-http-client/src/key/info.js","../../node_modules/ipfs-http-client/src/key/list.js","../../node_modules/ipfs-http-client/src/key/rename.js","../../node_modules/ipfs-http-client/src/key/rm.js","../../node_modules/ipfs-http-client/src/key/index.js","../../node_modules/ipfs-http-client/src/log/level.js","../../node_modules/ipfs-http-client/src/log/ls.js","../../node_modules/ipfs-http-client/src/log/tail.js","../../node_modules/ipfs-http-client/src/log/index.js","../../node_modules/ipfs-http-client/src/name/publish.js","../../node_modules/ipfs-http-client/src/name/resolve.js","../../node_modules/ipfs-http-client/src/name/pubsub/cancel.js","../../node_modules/ipfs-http-client/src/name/pubsub/state.js","../../node_modules/ipfs-http-client/src/name/pubsub/subs.js","../../node_modules/ipfs-http-client/src/name/pubsub/index.js","../../node_modules/ipfs-http-client/src/name/index.js","../../node_modules/ipfs-http-client/src/object/data.js","../../node_modules/ipfs-http-client/src/object/get.js","../../node_modules/ipfs-http-client/src/object/links.js","../../node_modules/ipfs-http-client/src/object/new.js","../../node_modules/ipfs-http-client/src/object/put.js","../../node_modules/ipfs-http-client/src/object/stat.js","../../node_modules/ipfs-http-client/src/object/patch/add-link.js","../../node_modules/ipfs-http-client/src/object/patch/append-data.js","../../node_modules/ipfs-http-client/src/object/patch/rm-link.js","../../node_modules/ipfs-http-client/src/object/patch/set-data.js","../../node_modules/ipfs-http-client/src/object/patch/index.js","../../node_modules/ipfs-http-client/src/object/index.js","../../node_modules/ipfs-core-utils/src/pins/normalise-input.js","../../node_modules/ipfs-http-client/src/pin/add-all.js","../../node_modules/ipfs-http-client/src/pin/add.js","../../node_modules/ipfs-http-client/src/pin/ls.js","../../node_modules/ipfs-http-client/src/pin/rm-all.js","../../node_modules/ipfs-http-client/src/pin/rm.js","../../node_modules/ipfs-http-client/src/pin/remote/utils.js","../../node_modules/ipfs-http-client/src/pin/remote/add.js","../../node_modules/ipfs-http-client/src/pin/remote/ls.js","../../node_modules/ipfs-http-client/src/pin/remote/rm.js","../../node_modules/ipfs-http-client/src/pin/remote/rm-all.js","../../node_modules/ipfs-http-client/src/pin/remote/service/utils.js","../../node_modules/ipfs-http-client/src/pin/remote/service/add.js","../../node_modules/ipfs-http-client/src/pin/remote/service/ls.js","../../node_modules/ipfs-http-client/src/pin/remote/service/rm.js","../../node_modules/ipfs-http-client/src/pin/remote/service/index.js","../../node_modules/ipfs-http-client/src/pin/remote/index.js","../../node_modules/ipfs-http-client/src/pin/index.js","../../node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js","../../node_modules/ipfs-http-client/src/pubsub/ls.js","../../node_modules/ipfs-http-client/src/pubsub/peers.js","../../node_modules/ipfs-http-client/src/pubsub/publish.js","../../node_modules/ipfs-http-client/src/pubsub/subscribe.js","../../node_modules/ipfs-http-client/src/pubsub/unsubscribe.js","../../node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js","../../node_modules/ipfs-http-client/src/pubsub/index.js","../../node_modules/ipfs-http-client/src/refs/local.js","../../node_modules/ipfs-http-client/src/refs/index.js","../../node_modules/ipfs-http-client/src/repo/gc.js","../../node_modules/ipfs-http-client/src/repo/stat.js","../../node_modules/ipfs-http-client/src/repo/version.js","../../node_modules/ipfs-http-client/src/repo/index.js","../../node_modules/ipfs-http-client/src/stats/bw.js","../../node_modules/ipfs-http-client/src/stats/index.js","../../node_modules/ipfs-http-client/src/swarm/addrs.js","../../node_modules/ipfs-http-client/src/swarm/connect.js","../../node_modules/ipfs-http-client/src/swarm/disconnect.js","../../node_modules/ipfs-http-client/src/swarm/local-addrs.js","../../node_modules/ipfs-http-client/src/swarm/peers.js","../../node_modules/ipfs-http-client/src/swarm/index.js","../../node_modules/ipfs-http-client/src/add-all.js","../../node_modules/ipfs-core-utils/src/files/normalise-content.js","../../node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js","../../node_modules/ipfs-core-utils/src/files/normalise-input-single.js","../../node_modules/ipfs-http-client/src/add.js","../../node_modules/ipfs-http-client/src/cat.js","../../node_modules/ipfs-http-client/src/commands.js","../../node_modules/ipfs-http-client/src/dns.js","../../node_modules/ipfs-http-client/src/get-endpoint-config.js","../../node_modules/ipfs-http-client/src/get.js","../../node_modules/ipfs-http-client/src/id.js","../../node_modules/ipfs-http-client/src/is-online.js","../../node_modules/ipfs-http-client/src/ls.js","../../node_modules/ipfs-http-client/src/mount.js","../../node_modules/ipfs-http-client/src/ping.js","../../node_modules/ipfs-http-client/src/resolve.js","../../node_modules/ipfs-http-client/src/start.js","../../node_modules/ipfs-http-client/src/stop.js","../../node_modules/ipfs-http-client/src/version.js","../../node_modules/ipfs-http-client/src/index.js","../../node_modules/multiformats/esm/src/bases/base64.js"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\nfunction anySignal (signals) {\n  const controller = new globalThis.AbortController()\n\n  function onAbort () {\n    controller.abort()\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue\n      signal.removeEventListener('abort', onAbort)\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue\n    if (signal.aborted) {\n      onAbort()\n      break\n    }\n    signal.addEventListener('abort', onAbort)\n  }\n\n  return controller.signal\n}\n\nmodule.exports = anySignal\nmodule.exports.anySignal = anySignal\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","import { fromBase64url, toBase64url } from './utils'\n\ninterface JWERecipient {\n  encrypted_key?: string\n  header?: Record<string, any>\n}\n\nexport interface DagJWE {\n  aad?: string\n  ciphertext: string\n  iv: string\n  protected: string\n  recipients?: Array<JWERecipient>\n  tag: string\n  unprotected?: Record<string, any>\n}\n\ninterface EncodedRecipient {\n  encrypted_key?: Uint8Array\n  header?: Record<string, any>\n}\n\nexport interface EncodedJWE {\n  aad?: Uint8Array\n  ciphertext: Uint8Array\n  iv: Uint8Array\n  protected: Uint8Array\n  recipients?: Array<EncodedRecipient>\n  tag: Uint8Array\n  unprotected?: Record<string, any>\n}\n\nfunction fromSplit(split: Array<string>): DagJWE {\n  const [protectedHeader, encrypted_key, iv, ciphertext, tag] = split\n  const jwe: DagJWE = {\n    ciphertext,\n    iv,\n    protected: protectedHeader,\n    tag,\n  }\n  if (encrypted_key) jwe.recipients = [{ encrypted_key }]\n  return jwe\n}\n\nfunction encodeRecipient(recipient: JWERecipient): EncodedRecipient {\n  const encRec: EncodedRecipient = {}\n  if (recipient.encrypted_key) encRec.encrypted_key = fromBase64url(recipient.encrypted_key)\n  if (recipient.header) encRec.header = recipient.header\n  return encRec\n}\n\nfunction encode(jwe: DagJWE): EncodedJWE {\n  const encJwe: EncodedJWE = {\n    ciphertext: fromBase64url(jwe.ciphertext),\n    protected: fromBase64url(jwe.protected),\n    iv: fromBase64url(jwe.iv),\n    tag: fromBase64url(jwe.tag),\n  }\n  if (jwe.aad) encJwe.aad = fromBase64url(jwe.aad)\n  if (jwe.recipients) encJwe.recipients = jwe.recipients.map(encodeRecipient)\n  if (jwe.unprotected) encJwe.unprotected = jwe.unprotected\n  return encJwe\n}\n\nfunction decodeRecipient(encoded: EncodedRecipient): JWERecipient {\n  const recipient: JWERecipient = {}\n  if (encoded.encrypted_key) recipient.encrypted_key = toBase64url(encoded.encrypted_key)\n  if (encoded.header) recipient.header = encoded.header\n  return recipient\n}\n\nfunction decode(encoded: EncodedJWE): DagJWE {\n  const jwe: DagJWE = {\n    ciphertext: toBase64url(encoded.ciphertext),\n    protected: toBase64url(encoded.protected),\n    iv: toBase64url(encoded.iv),\n    tag: toBase64url(encoded.tag),\n  }\n  if (encoded.aad) jwe.aad = toBase64url(encoded.aad)\n  if (encoded.recipients) jwe.recipients = encoded.recipients.map(decodeRecipient)\n  if (encoded.unprotected) jwe.unprotected = encoded.unprotected\n  return jwe\n}\n\nexport default {\n  fromSplit,\n  decode,\n  encode,\n}\n","import signing, { DagJWS, EncodedJWS } from './signing'\nexport type { DagJWS } from './signing'\nimport encryption, { DagJWE, EncodedJWE } from './encryption'\nexport type { DagJWE } from './encryption'\nimport * as cbor from '@ipld/dag-cbor'\nimport type { ByteView } from 'multiformats/codecs/interface'\n\n// string name of the codec\nexport const name = 'dag-jose'\n\n// integer for the multiformat entry of the codec\nexport const code = 133 // 0x85 https://github.com/multiformats/multicodec/blob/master/table.csv\n\nfunction isDagJWS(jose: DagJWS | DagJWE | EncodedJWS | EncodedJWE): jose is DagJWS | EncodedJWS {\n  return (\n    'payload' in jose &&\n    typeof jose.payload === 'string' &&\n    'signatures' in jose &&\n    Array.isArray(jose.signatures)\n  )\n}\n\nfunction isEncodedJWS(\n  jose: DagJWS | DagJWE | EncodedJWS | EncodedJWE\n): jose is DagJWS | EncodedJWS {\n  return (\n    'payload' in jose &&\n    jose.payload instanceof Uint8Array &&\n    'signatures' in jose &&\n    Array.isArray(jose.signatures)\n  )\n}\n\nfunction isEncodedJWE(\n  jose: DagJWS | DagJWE | EncodedJWS | EncodedJWE\n): jose is DagJWE | EncodedJWE {\n  return (\n    'ciphertext' in jose &&\n    jose.ciphertext instanceof Uint8Array &&\n    'iv' in jose &&\n    jose.iv instanceof Uint8Array &&\n    'protected' in jose &&\n    jose.protected instanceof Uint8Array &&\n    'tag' in jose &&\n    jose.tag instanceof Uint8Array\n  )\n}\n\nfunction isDagJWE(jose: DagJWS | DagJWE | EncodedJWS | EncodedJWE): jose is DagJWE | EncodedJWE {\n  return (\n    'ciphertext' in jose &&\n    typeof jose.ciphertext === 'string' &&\n    'iv' in jose &&\n    typeof jose.iv === 'string' &&\n    'protected' in jose &&\n    typeof jose.protected === 'string' &&\n    'tag' in jose &&\n    typeof jose.tag === 'string'\n  )\n}\n\n/**\n * Create a properly formed DagJWS or DagJWE object, from either a DagJWS, or\n * DagJWE or the compact string form of either.\n * Applying this function on an already valid DagJWS or DagJWE object will be\n * idempotent. So this function can be used to either verify the proper object\n * form, or expand a compact string form and ensure you have the same form\n * of object that you would receive if you performed a round-trip encode/decode.\n */\nexport function toGeneral(jose: DagJWS | DagJWE | string): DagJWS | DagJWE {\n  if (typeof jose === 'string') {\n    const split = jose.split('.')\n    if (split.length === 3) {\n      return signing.fromSplit(split)\n    } else if (split.length === 5) {\n      return encryption.fromSplit(split)\n    }\n    throw new Error('Not a valid JOSE string')\n  }\n  if (isDagJWS(jose) || isDagJWE(jose)) {\n    return jose\n  }\n  throw new Error('Not a valid unencoded JOSE object')\n}\n\nexport function encode(obj: DagJWS | DagJWE | string): ByteView<EncodedJWS | EncodedJWE> {\n  if (typeof obj === 'string') {\n    obj = toGeneral(obj)\n  }\n  let encodedJose\n  if (isDagJWS(obj)) {\n    encodedJose = signing.encode(obj)\n  } else if (isDagJWE(obj)) {\n    encodedJose = encryption.encode(obj)\n  } else {\n    throw new Error('Not a valid JOSE object')\n  }\n  return new Uint8Array(cbor.encode(encodedJose))\n}\n\nexport function decode(data: ByteView<EncodedJWS | EncodedJWE>): DagJWS | DagJWE {\n  let encoded: EncodedJWS | EncodedJWE\n  try {\n    encoded = cbor.decode(data)\n  } catch (e) {\n    throw new Error('Not a valid DAG-JOSE object')\n  }\n  if (isEncodedJWS(encoded)) {\n    return signing.decode(encoded)\n  } else if (isEncodedJWE(encoded)) {\n    return encryption.decode(encoded)\n  } else {\n    throw new Error('Not a valid DAG-JOSE object')\n  }\n}\n","import { fromBase64url, toBase64url } from './utils'\nimport { CID } from 'multiformats/cid'\n\ninterface JWSSignature {\n  header?: Record<string, any>\n  protected?: string\n  signature: string\n}\n\nexport interface DagJWS {\n  payload: string\n  signatures: Array<JWSSignature>\n  link?: CID\n}\n\ninterface EncodedSignature {\n  header?: Record<string, any>\n  protected?: Uint8Array\n  signature: Uint8Array\n}\n\nexport interface EncodedJWS {\n  payload: Uint8Array\n  signatures: Array<EncodedSignature>\n}\n\nexport interface PublicKey {\n  id: string\n  type: string\n  controller: string\n  publicKeyHex?: string\n  publicKeyBase64?: string\n}\n\nfunction fromSplit(split: Array<string>): DagJWS {\n  const [protectedHeader, payload, signature] = split\n  return {\n    payload,\n    signatures: [{ protected: protectedHeader, signature }],\n    link: CID.decode(fromBase64url(payload)),\n  }\n}\n\nfunction encodeSignature(signature: JWSSignature): EncodedSignature {\n  const encoded: EncodedSignature = {\n    signature: fromBase64url(signature.signature),\n  }\n  if (signature.header) encoded.header = signature.header\n  if (signature.protected) encoded.protected = fromBase64url(signature.protected)\n  return encoded\n}\n\nfunction encode(jws: DagJWS): EncodedJWS {\n  const payload = fromBase64url(jws.payload)\n  try {\n    CID.decode(payload)\n  } catch (e) {\n    throw new Error('Not a valid DagJWS')\n  }\n  const encodedJws: EncodedJWS = {\n    payload,\n    signatures: jws.signatures.map(encodeSignature),\n  }\n  return encodedJws\n}\n\nfunction decodeSignature(encoded: EncodedSignature): JWSSignature {\n  const sign: JWSSignature = {\n    signature: toBase64url(encoded.signature),\n  }\n  if (encoded.header) sign.header = encoded.header\n  if (encoded.protected) sign.protected = toBase64url(encoded.protected)\n  return sign\n}\n\nfunction decode(encoded: EncodedJWS): DagJWS {\n  const decoded: DagJWS = {\n    payload: toBase64url(encoded.payload),\n    signatures: encoded.signatures.map(decodeSignature),\n  }\n  decoded.link = CID.decode(new Uint8Array(encoded.payload))\n  return decoded\n}\n\nexport default {\n  fromSplit,\n  encode,\n  decode,\n}\n","import { base64url } from 'multiformats/bases/base64'\n\nexport function toBase64url(b: Uint8Array): string {\n  return base64url.encode(b).slice(1) // remove multibase prefix\n}\n\nexport function fromBase64url(s: string): Uint8Array {\n  return base64url.decode(`u${s}`)\n}\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n","'use strict'\n\n/**\n * @typedef {globalThis.Headers} Headers\n * @typedef {globalThis.Request} Request\n * @typedef {globalThis.Response} Response\n */\n\n// use window.fetch if it is available, fall back to node-fetch if not\nmodule.exports = require('native-fetch')\n","'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n","/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n","'use strict'\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n","'use strict'\n\nconst { TimeoutError, AbortError } = require('./error')\n// @ts-expect-error\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\n\n/**\n * @typedef {import('../types').FetchOptions} FetchOptions\n * @typedef {import('../types').ProgressFn} ProgressFn\n */\n\n/**\n * Fetch with progress\n *\n * @param {string | Request} url\n * @param {FetchOptions} [options]\n * @returns {Promise<ResponseWithURL>}\n */\nconst fetchWithProgress = (url, options = {}) => {\n  const request = new XMLHttpRequest()\n  request.open(options.method || 'GET', url.toString(), true)\n\n  const { timeout, headers } = options\n\n  if (timeout && timeout > 0 && timeout < Infinity) {\n    request.timeout = timeout\n  }\n\n  if (options.overrideMimeType != null) {\n    request.overrideMimeType(options.overrideMimeType)\n  }\n\n  if (headers) {\n    for (const [name, value] of new Headers(headers)) {\n      request.setRequestHeader(name, value)\n    }\n  }\n\n  if (options.signal) {\n    options.signal.onabort = () => request.abort()\n  }\n\n  if (options.onUploadProgress) {\n    request.upload.onprogress = options.onUploadProgress\n  }\n\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\n  // instances coming from JSDOM are not compatible with `Response` from\n  // node-fetch (which is the setup we get when testing with jest because\n  // it uses JSDOM which does not provide a global fetch\n  // https://github.com/jsdom/jsdom/issues/1724)\n  request.responseType = 'arraybuffer'\n\n  return new Promise((resolve, reject) => {\n    /**\n     * @param {Event} event\n     */\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'error': {\n          resolve(Response.error())\n          break\n        }\n        case 'load': {\n          resolve(\n            new ResponseWithURL(request.responseURL, request.response, {\n              status: request.status,\n              statusText: request.statusText,\n              headers: parseHeaders(request.getAllResponseHeaders())\n            })\n          )\n          break\n        }\n        case 'timeout': {\n          reject(new TimeoutError())\n          break\n        }\n        case 'abort': {\n          reject(new AbortError())\n          break\n        }\n        default: {\n          break\n        }\n      }\n    }\n    request.onerror = handleEvent\n    request.onload = handleEvent\n    request.ontimeout = handleEvent\n    request.onabort = handleEvent\n\n    // @ts-expect-error options.body can be a node readable stream, which isn't compatible with XHR, but this\n    // file is a browser override so you won't get a node readable stream so ignore the error\n    request.send(options.body)\n  })\n}\n\nconst fetchWithStreaming = fetch\n\n/**\n * @param {string | Request} url\n * @param {FetchOptions} options\n */\nconst fetchWith = (url, options = {}) =>\n  (options.onUploadProgress != null)\n    ? fetchWithProgress(url, options)\n    : fetchWithStreaming(url, options)\n\n/**\n * Parse Headers from a XMLHttpRequest\n *\n * @param {string} input\n * @returns {Headers}\n */\nconst parseHeaders = (input) => {\n  const headers = new Headers()\n  for (const line of input.trim().split(/[\\r\\n]+/)) {\n    const index = line.indexOf(': ')\n    if (index > 0) {\n      headers.set(line.slice(0, index), line.slice(index + 1))\n    }\n  }\n\n  return headers\n}\n\nclass ResponseWithURL extends Response {\n  /**\n   * @param {string} url\n   * @param {BodyInit} body\n   * @param {ResponseInit} options\n   */\n  constructor (url, body, options) {\n    super(body, options)\n    Object.defineProperty(this, 'url', { value: url })\n  }\n}\n\nmodule.exports = {\n  fetch: fetchWith,\n  Request,\n  Headers\n}\n","// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to false\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nconst {\n  URLWithLegacySupport,\n  format,\n  URLSearchParams,\n  defaultBase\n} = require('./src/url')\nconst relative = require('./src/relative')\n\nmodule.exports = {\n  URL: URLWithLegacySupport,\n  URLSearchParams,\n  format,\n  relative,\n  defaultBase\n}\n","'use strict'\n\nconst { URLWithLegacySupport, format } = require('./url')\n\n/**\n * @param {string | undefined} url\n * @param {any} [location]\n * @param {any} [protocolMap]\n * @param {any} [defaultProtocol]\n */\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n  let protocol = location.protocol\n    ? location.protocol.replace(':', '')\n    : 'http'\n\n  // Check protocol map\n  protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':'\n  let urlParsed\n\n  try {\n    urlParsed = new URLWithLegacySupport(url)\n  } catch (err) {\n    urlParsed = {}\n  }\n\n  const base = Object.assign({}, location, {\n    protocol: protocol || urlParsed.protocol,\n    host: location.host || urlParsed.host\n  })\n\n  return new URLWithLegacySupport(url, format(base)).toString()\n}\n","'use strict'\n\nconst isReactNative =\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n\nfunction getDefaultBase () {\n  if (isReactNative) {\n    return 'http://localhost'\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return ''\n  }\n\n  return self.location.protocol + '//' + self.location.host\n}\n\nconst URL = self.URL\nconst defaultBase = getDefaultBase()\n\nclass URLWithLegacySupport {\n  constructor (url = '', base = defaultBase) {\n    this.super = new URL(url, base)\n    this.path = this.pathname + this.search\n    this.auth =\n            this.username && this.password\n              ? this.username + ':' + this.password\n              : null\n\n    this.query =\n            this.search && this.search.startsWith('?')\n              ? this.search.slice(1)\n              : null\n  }\n\n  get hash () {\n    return this.super.hash\n  }\n\n  get host () {\n    return this.super.host\n  }\n\n  get hostname () {\n    return this.super.hostname\n  }\n\n  get href () {\n    return this.super.href\n  }\n\n  get origin () {\n    return this.super.origin\n  }\n\n  get password () {\n    return this.super.password\n  }\n\n  get pathname () {\n    return this.super.pathname\n  }\n\n  get port () {\n    return this.super.port\n  }\n\n  get protocol () {\n    return this.super.protocol\n  }\n\n  get search () {\n    return this.super.search\n  }\n\n  get searchParams () {\n    return this.super.searchParams\n  }\n\n  get username () {\n    return this.super.username\n  }\n\n  set hash (hash) {\n    this.super.hash = hash\n  }\n\n  set host (host) {\n    this.super.host = host\n  }\n\n  set hostname (hostname) {\n    this.super.hostname = hostname\n  }\n\n  set href (href) {\n    this.super.href = href\n  }\n\n  set password (password) {\n    this.super.password = password\n  }\n\n  set pathname (pathname) {\n    this.super.pathname = pathname\n  }\n\n  set port (port) {\n    this.super.port = port\n  }\n\n  set protocol (protocol) {\n    this.super.protocol = protocol\n  }\n\n  set search (search) {\n    this.super.search = search\n  }\n\n  set username (username) {\n    this.super.username = username\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL (o) {\n    return URL.createObjectURL(o)\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL (o) {\n    URL.revokeObjectURL(o)\n  }\n\n  toJSON () {\n    return this.super.toJSON()\n  }\n\n  toString () {\n    return this.super.toString()\n  }\n\n  format () {\n    return this.toString()\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format (obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj)\n\n    return url.toString()\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass =\n            // @ts-ignore its not supported in node but we normalise\n            obj.username && obj.password\n              // @ts-ignore its not supported in node but we normalise\n              ? `${obj.username}:${obj.password}@`\n              : ''\n    const auth = obj.auth ? obj.auth + '@' : ''\n    const port = obj.port ? ':' + obj.port : ''\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\n    const host = obj.host || ''\n    const hostname = obj.hostname || ''\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\n    const hash = obj.hash || ''\n    const pathname = obj.pathname || ''\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search\n\n    return `${protocol}${userPass || auth}${\n            host || hostname + port\n        }${path}${hash}`\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n}\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","var OverloadYield = require(\"./OverloadYield.js\");\nfunction AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\nmodule.exports = AsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}\nmodule.exports = _OverloadYield, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}\nmodule.exports = _asyncGeneratorDelegate, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var OverloadYield = require(\"./OverloadYield.js\");\nfunction _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}\nmodule.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var AsyncGenerator = require(\"./AsyncGenerator.js\");\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}\nmodule.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nexport class Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nexport class Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nexport class Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};","import { CID } from 'multiformats';\nimport { base64 } from 'multiformats/bases/base64';\nimport {\n  Token,\n  Type\n} from 'cborg';\nimport * as cborgJson from 'cborg/json';\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const cidString = cid.toString();\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.string, cidString, cidString.length),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction bytesEncoder(bytes) {\n  const bytesString = base64.encode(bytes).slice(1);\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1),\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, 'bytes', 5),\n    new Token(Type.string, bytesString, bytesString.length),\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder,\n    Buffer: bytesEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  constructor(data, options) {\n    super(data, options);\n    this.tokenBuffer = [];\n  }\n  done() {\n    return this.tokenBuffer.length === 0 && super.done();\n  }\n  _next() {\n    if (this.tokenBuffer.length > 0) {\n      return this.tokenBuffer.pop();\n    }\n    return super.next();\n  }\n  next() {\n    const token = this._next();\n    if (token.type === Type.map) {\n      const keyToken = this._next();\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next();\n        if (valueToken.type === Type.string) {\n          const breakToken = this._next();\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form');\n          }\n          this.tokenBuffer.push(valueToken);\n          return new Token(Type.tag, 42, 0);\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next();\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next();\n            if (innerValueToken.type === Type.string) {\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next();\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form');\n                }\n              }\n              const bytes = base64.decode(`m${ innerValueToken.value }`);\n              return new Token(Type.bytes, bytes, innerValueToken.value.length);\n            }\n            this.tokenBuffer.push(innerValueToken);\n          }\n          this.tokenBuffer.push(innerKeyToken);\n        }\n        this.tokenBuffer.push(valueToken);\n      }\n      this.tokenBuffer.push(keyToken);\n    }\n    return token;\n  }\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[42] = CID.parse;\nexport const name = 'dag-json';\nexport const code = 297;\nexport const encode = node => cborgJson.encode(node, encodeOptions);\nexport const decode = data => {\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) });\n  return cborgJson.decode(data, options);\n};","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries\n\t? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n\t: '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\n\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact\n\t? v46Exact\n\t: new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;\n","// Even though the browser version is a no-op, we wrap it to ensure consistent behavior.\nexport default function functionTimeout(function_) {\n\tconst wrappedFunction = (...arguments_) => function_(...arguments_);\n\n\tObject.defineProperty(wrappedFunction, 'name', {\n\t\tvalue: `functionTimeout(${function_.name || '<anonymous>'})`,\n\t\tconfigurable: true,\n\t});\n\n\treturn wrappedFunction;\n}\n\nexport function isTimeoutError() {\n\treturn false;\n}\n","const {toString} = Object.prototype;\n\nexport default function isRegexp(value) {\n\treturn toString.call(value) === '[object RegExp]';\n}\n","import isRegexp from 'is-regexp';\n\nconst flagMap = {\n\tglobal: 'g',\n\tignoreCase: 'i',\n\tmultiline: 'm',\n\tdotAll: 's',\n\tsticky: 'y',\n\tunicode: 'u'\n};\n\nexport default function clonedRegexp(regexp, options = {}) {\n\tif (!isRegexp(regexp)) {\n\t\tthrow new TypeError('Expected a RegExp instance');\n\t}\n\n\tconst flags = Object.keys(flagMap).map(flag => (\n\t\t(typeof options[flag] === 'boolean' ? options[flag] : regexp[flag]) ? flagMap[flag] : ''\n\t)).join('');\n\n\tconst clonedRegexp = new RegExp(options.source || regexp.source, flags);\n\n\tclonedRegexp.lastIndex = typeof options.lastIndex === 'number' ?\n\t\toptions.lastIndex :\n\t\tregexp.lastIndex;\n\n\treturn clonedRegexp;\n}\n","import functionTimeout, {isTimeoutError} from 'function-timeout';\nimport timeSpan from 'time-span';\nimport cloneRegexp from 'clone-regexp'; // TODO: Use `structuredClone` instead when targeting Node.js 18.\n\nconst resultToMatch = result => ({\n\tmatch: result[0],\n\tindex: result.index,\n\tgroups: result.slice(1),\n\tnamedGroups: result.groups ?? {},\n\tinput: result.input,\n});\n\nexport function isMatch(regex, string, {timeout} = {}) {\n\ttry {\n\t\treturn functionTimeout(() => cloneRegexp(regex).test(string), {timeout})();\n\t} catch (error) {\n\t\tif (isTimeoutError(error)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function firstMatch(regex, string, {timeout} = {}) {\n\ttry {\n\t\tconst result = functionTimeout(() => cloneRegexp(regex).exec(string), {timeout})();\n\n\t\tif (result === null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn resultToMatch(result);\n\t} catch (error) {\n\t\tif (isTimeoutError(error)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function matches(regex, string, {timeout = Number.POSITIVE_INFINITY, matchTimeout = Number.POSITIVE_INFINITY} = {}) {\n\tif (!regex.global) {\n\t\tthrow new Error('The regex must have the global flag, otherwise, use `firstMatch()` instead');\n\t}\n\n\treturn {\n\t\t* [Symbol.iterator]() {\n\t\t\ttry {\n\t\t\t\tconst matches = string.matchAll(regex); // The regex is only executed when iterated over.\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst nextMatch = functionTimeout(() => matches.next(), {timeout: (timeout !== Number.POSITIVE_INFINITY || matchTimeout !== Number.POSITIVE_INFINITY) ? Math.min(timeout, matchTimeout) : undefined}); // `matches.next` must be called within an arrow function so that it doesn't loose its context.\n\n\t\t\t\t\tconst end = timeSpan();\n\t\t\t\t\tconst {value, done} = nextMatch();\n\t\t\t\t\ttimeout -= Math.ceil(end());\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tyield resultToMatch(value);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!isTimeoutError(error)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n","import ipRegex from 'ip-regex';\nimport {isMatch} from 'super-regex';\n\nconst maxIPv4Length = 15;\nconst maxIPv6Length = 45;\n\nconst options = {\n\ttimeout: 400,\n};\n\nexport function isIP(string) {\n\treturn isMatch(ipRegex({exact: true}), string.slice(0, maxIPv6Length), options);\n}\n\nexport function isIPv6(string) {\n\treturn isMatch(ipRegex.v6({exact: true}), string.slice(0, maxIPv6Length), options);\n}\n\nexport function isIPv4(string) {\n\treturn isMatch(ipRegex.v4({exact: true}), string.slice(0, maxIPv4Length), options);\n}\n\nexport function ipVersion(string) {\n\treturn isIP(string) ? (isIPv6(string) ? 6 : 4) : undefined;\n}\n","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","import { isIPv4, isIPv6 } from 'is-ip'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nexport { isIP } from 'is-ip'\nexport const isV4 = isIPv4\nexport const isV6 = isIPv6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip: string): Uint8Array {\n  let offset = 0\n  let result\n  ip = ip.trim()\n\n  if (isV4(ip)) {\n    result = new Uint8Array(offset + 4)\n    ip.split(/\\./g).forEach((byte) => {\n      result[offset++] = parseInt(byte, 10) & 0xff\n    })\n  } else if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      let v4Buffer: Uint8Array | undefined\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer != null && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv: [number, number, ...string[]] = [i, 1]\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    result = new Uint8Array(offset + 16)\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      result[offset++] = (word >> 8) & 0xff\n      result[offset++] = word & 0xff\n    }\n  }\n\n  if (result == null) {\n    throw new Error(`invalid ip address \"${ip}\"`)\n  }\n\n  return result\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf: Uint8Array, offset: number = 0, length?: number) {\n  offset = ~~offset\n  length = length ?? (buf.length - offset)\n\n  const result = []\n  let string = ''\n  const view = new DataView(buf.buffer)\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buf[offset + i])\n    }\n    string = result.join('.')\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n    string = result.join(':')\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n    string = string.replace(/:{3,4}/, '::')\n  }\n\n  return string\n}\n","export interface Protocol {\n  code: number\n  size: number\n  name: string\n  resolvable?: boolean\n  path?: boolean\n}\n\nconst V = -1\nexport const names: Record<string, Protocol> = {}\nexport const codes: Record<number, Protocol> = {}\n\nexport const table: Array<[number, number, string, boolean?, boolean?]> = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', true],\n  [54, V, 'dns4', true],\n  [55, V, 'dns6', true],\n  [56, V, 'dnsaddr', true],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [280, 0, 'webrtc'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, true],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [465, 0, 'webtransport'],\n  [466, V, 'certhash'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\n// populate tables\ntable.forEach(row => {\n  const proto = createProtocol(...row)\n  codes[proto.code] = proto\n  names[proto.name] = proto\n})\n\nexport function createProtocol (code: number, size: number, name: string, resolvable?: any, path?: any): Protocol {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nexport function getProtocol (proto: number | string) {\n  if (typeof proto === 'number') {\n    if (codes[proto] != null) {\n      return codes[proto]\n    }\n\n    throw new Error(`no protocol with code: ${proto}`)\n  } else if (typeof proto === 'string') {\n    if (names[proto] != null) {\n      return names[proto]\n    }\n\n    throw new Error(`no protocol with name: ${proto}`)\n  }\n\n  throw new Error(`invalid protocol id type: ${typeof proto}`)\n}\n","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}","\nimport * as ip from './ip.js'\nimport { getProtocol } from './protocols-table.js'\nimport { CID } from 'multiformats/cid'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport * as Digest from 'multiformats/hashes/digest'\nimport varint from 'varint'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\n\n/**\n * converts (serializes) addresses\n */\nexport function convert (proto: string, a: string | Uint8Array) {\n  if (a instanceof Uint8Array) {\n    return convertToString(proto, a)\n  } else {\n    return convertToBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString (proto: number | string, buf: Uint8Array) {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    case 466: // certhash\n      return bytes2mb(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nexport function convertToBytes (proto: string | number, str: string) {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    case 466: // certhash\n      return mb2bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nconst decoders = Object.values(bases).map((c) => c.decoder)\nconst anybaseDecoder = (function () {\n  let acc = decoders[0].or(decoders[1])\n  decoders.slice(2).forEach((d) => (acc = acc.or(d)))\n  return acc\n})()\n\nfunction ip2bytes (ipString: string) {\n  if (!ip.isIP(ipString)) {\n    throw new Error(`invalid ip address \"${ipString}\"`)\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff: Uint8Array) {\n  const ipString = ip.toString(ipBuff, 0, ipBuff.length)\n  if (ipString == null) {\n    throw new Error('ipBuff is required')\n  }\n  if (!ip.isIP(ipString)) {\n    throw new Error(`invalid ip address \"${ipString}\"`)\n  }\n  return ipString\n}\n\nfunction port2bytes (port: number) {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf: Uint8Array) {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset)\n}\n\nfunction str2bytes (str: string) {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf: Uint8Array) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash: string) {\n  let mh\n\n  if (hash[0] === 'Q' || hash[0] === '1') {\n    mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes\n  } else {\n    mh = CID.parse(hash).multihash.bytes\n  }\n\n  // the address is a varint prefixed multihash string representation\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction mb2bytes (mbstr: string) {\n  const mb = anybaseDecoder.decode(mbstr)\n  const size = Uint8Array.from(varint.encode(mb.length))\n  return uint8ArrayConcat([size, mb], size.length + mb.length)\n}\nfunction bytes2mb (buf: Uint8Array) {\n  const size = varint.decode(buf)\n  const hash = buf.slice(varint.decode.bytes)\n\n  if (hash.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return 'u' + uint8ArrayToString(hash, 'base64url')\n}\n\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh (buf: Uint8Array) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str: string) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 16) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str: string) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 56) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`)\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode(`b${addr[0]}`)\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf: Uint8Array) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return `${addr}:${port}`\n}\n","import { convertToBytes, convertToString } from './convert.js'\nimport { getProtocol } from './protocols-table.js'\nimport varint from 'varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { Protocol } from './protocols-table.js'\n\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples (str: string) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = getProtocol(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path === true) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString (tuples: Array<[number, string?]>) {\n  const parts: string[] = []\n  tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1 && tup[1] != null) {\n      parts.push(tup[1])\n    }\n    return null\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples (tuples: Array<string[] | string>): Array<[number, Uint8Array?]> {\n  return tuples.map((tup) => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convertToBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples (tuples: Array<[number, Uint8Array?]>): Array<[number, string?]> {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup[1] != null) {\n      return [proto.code, convertToString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes (tuples: Array<[number, Uint8Array?]>) {\n  return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1 && tup[1] != null) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\nexport function sizeForAddr (p: Protocol, addr: Uint8Array | number[]) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\nexport function bytesToTuples (buf: Uint8Array): Array<[number, Uint8Array?]> {\n  const tuples: Array<[number, Uint8Array?]> = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = getProtocol(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n/**\n * Uint8Array -> String\n */\nexport function bytesToString (buf: Uint8Array) {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes (str: string) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n/**\n * String -> Uint8Array\n */\nexport function fromString (str: string) {\n  return stringToBytes(str)\n}\n\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes (buf: Uint8Array) {\n  const err = validateBytes(buf)\n  if (err != null) {\n    throw err\n  }\n  return Uint8Array.from(buf) // copy\n}\n\nexport function validateBytes (buf: Uint8Array): Error | undefined {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err: any) {\n    return err\n  }\n}\n\nexport function isValidBytes (buf: Uint8Array) {\n  return validateBytes(buf) === undefined\n}\n\nexport function cleanPath (str: string) {\n  return '/' + str.trim().split('/').filter((a) => a).join('/')\n}\n\nexport function ParseError (str: string) {\n  return new Error('Error parsing address: ' + str)\n}\n\nexport function protoFromTuple (tup: any[]) {\n  const proto = getProtocol(tup[0])\n  return proto\n}\n","import * as codec from './codec.js'\nimport { getProtocol, names } from './protocols-table.js'\nimport varint from 'varint'\nimport { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport errCode from 'err-code'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst DNS_CODES = [\n  getProtocol('dns').code,\n  getProtocol('dns4').code,\n  getProtocol('dns6').code,\n  getProtocol('dnsaddr').code\n]\n\nconst P2P_CODES = [\n  getProtocol('p2p').code,\n  getProtocol('ipfs').code\n]\n\nexport interface Protocol {\n  code: number\n  size: number\n  name: string\n  resolvable?: boolean | undefined\n  path?: boolean | undefined\n}\n\nexport interface MultiaddrObject {\n  family: 4 | 6\n  host: string\n  transport: string\n  port: number\n}\n\nexport interface NodeAddress {\n  family: 4 | 6\n  address: string\n  port: number\n}\n\nexport type MultiaddrInput = string | Multiaddr | Uint8Array | null\n\nexport interface Resolver { (addr: Multiaddr, options?: AbortOptions): Promise<string[]> }\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\nconst resolvers = new Map<string, Resolver>()\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr')\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Uint8Array, String or another Multiaddr instance\n * public key.\n *\n */\nexport class Multiaddr {\n  static resolvers = resolvers\n\n  public bytes: Uint8Array\n\n  /**\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   *\n   * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n   */\n  constructor (addr?: MultiaddrInput) {\n    // default\n    if (addr == null) {\n      addr = ''\n    }\n\n    // Define symbol\n    Object.defineProperty(this, symbol, { value: true })\n\n    if (addr instanceof Uint8Array) {\n      this.bytes = codec.fromBytes(addr)\n    } else if (typeof addr === 'string') {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n      }\n      this.bytes = codec.fromString(addr)\n    } else if (Multiaddr.isMultiaddr(addr)) { // Multiaddr\n      this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr')\n    }\n  }\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString () {\n    return codec.bytesToString(this.bytes)\n  }\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * JSON.stringify(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n   * // { family: 4, host: '127.0.0.1', transport: 'tcp', port: 4001 }\n   * ```\n   */\n  toOptions (): MultiaddrObject {\n    const codes = this.protoCodes()\n    const parts = this.toString().split('/').slice(1)\n    let transport: string\n    let port: number\n\n    if (parts.length > 2) {\n      // default to https when protocol & port are omitted from DNS addrs\n      if (DNS_CODES.includes(codes[0]) && P2P_CODES.includes(codes[1])) {\n        transport = getProtocol('tcp').name\n        port = 443\n      } else {\n        transport = getProtocol(parts[2]).name\n        port = parseInt(parts[3])\n      }\n    } else if (DNS_CODES.includes(codes[0])) {\n      transport = getProtocol('tcp').name\n      port = 443\n    } else {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".')\n    }\n\n    const opts: MultiaddrObject = {\n      family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n      host: parts[1],\n      transport,\n      port\n    }\n\n    return opts\n  }\n\n  /**\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n   * left-to-right order. Each object contains the protocol code, protocol name,\n   * and the size of its address space in bits.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n   * // [ { code: 4, size: 32, name: 'ip4' },\n   * //   { code: 6, size: 16, name: 'tcp' } ]\n   * ```\n   */\n  protos () {\n    return this.protoCodes().map(code => Object.assign({}, getProtocol(code)))\n  }\n\n  /**\n   * Returns the codes of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n   * // [ 4, 6 ]\n   * ```\n   */\n  protoCodes () {\n    const codes: number[] = []\n    const buf = this.bytes\n    let i = 0\n    while (i < buf.length) {\n      const code = varint.decode(buf, i)\n      const n = varint.decode.bytes\n\n      const p = getProtocol(code)\n      const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n      i += (size + n)\n      codes.push(code)\n    }\n\n    return codes\n  }\n\n  /**\n   * Returns the names of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n   * // [ 'ip4', 'tcp' ]\n   * ```\n   */\n  protoNames () {\n    return this.protos().map(proto => proto.name)\n  }\n\n  /**\n   * Returns a tuple of parts\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n   * ```\n   */\n  tuples () {\n    return codec.bytesToTuples(this.bytes)\n  }\n\n  /**\n   * Returns a tuple of string/number parts\n   * - tuples[][0] = code of protocol\n   * - tuples[][1] = contents of address\n   *\n   * @example\n   * ```js\n   * new Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n   * // [ [ 4, '127.0.0.1' ], [ 6, '4001' ] ]\n   * ```\n   */\n  stringTuples () {\n    const t = codec.bytesToTuples(this.bytes)\n    return codec.tuplesToStringTuples(t)\n  }\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate (addr: MultiaddrInput) {\n    addr = new Multiaddr(addr)\n    return new Multiaddr(this.toString() + addr.toString())\n  }\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   */\n  decapsulate (addr: Multiaddr | string) {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n    if (i < 0) {\n      throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`)\n    }\n    return new Multiaddr(s.slice(0, i))\n  }\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * const addr = new Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * new Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   */\n  decapsulateCode (code: number) {\n    const tuples = this.tuples()\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return new Multiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n      }\n    }\n    return this\n  }\n\n  /**\n   * Extract the peerId if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n   *\n   * // should return QmValidBase58string or null if the id is missing or invalid\n   * const peerId = mh1.getPeerId()\n   * ```\n   */\n  getPeerId (): string | null {\n    try {\n      const tuples = this.stringTuples().filter((tuple) => {\n        if (tuple[0] === names.ipfs.code) {\n          return true\n        }\n        return false\n      })\n\n      // Get the last ipfs tuple ['ipfs', 'peerid string']\n      const tuple = tuples.pop()\n      if (tuple?.[1] != null) {\n        const peerIdStr = tuple[1]\n\n        // peer id is base58btc encoded string but not multibase encoded so add the `z`\n        // prefix so we can validate that it is correctly encoded\n        if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n          return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc')\n        }\n\n        // try to parse peer id as CID\n        return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc')\n      }\n\n      return null\n    } catch (e) {\n      return null\n    }\n  }\n\n  /**\n   * Extract the path if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n   *\n   * // should return utf8 string or null if the id is missing or invalid\n   * const path = mh1.getPath()\n   * ```\n   */\n  getPath (): string | null {\n    let path = null\n    try {\n      path = this.stringTuples().filter((tuple) => {\n        const proto = getProtocol(tuple[0])\n        if (proto.path === true) {\n          return true\n        }\n        return false\n      })[0][1]\n\n      if (path == null) {\n        path = null\n      }\n    } catch {\n      path = null\n    }\n    return path\n  }\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n   *\n   * const mh2 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   */\n  equals (addr: { bytes: Uint8Array }) {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  /**\n   * Resolve multiaddr if containing resolvable hostname.\n   *\n   * @example\n   * ```js\n   * Multiaddr.resolvers.set('dnsaddr', resolverFunction)\n   * const mh1 = new Multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n   * const resolvedMultiaddrs = await mh1.resolve()\n   * // [\n   * //   <Multiaddr 04934b5353060fa1a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b53530601bbde03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>,\n   * //   <Multiaddr 04934b535391020fa1cc03a503221220c10f9319dac35c270a6b74cd644cb3acfc1f6efc8c821f8eb282599fd1814f64 - /ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb>\n   * // ]\n   * ```\n   */\n  async resolve (options?: AbortOptions) {\n    const resolvableProto = this.protos().find((p) => p.resolvable)\n\n    // Multiaddr is not resolvable?\n    if (resolvableProto == null) {\n      return [this]\n    }\n\n    const resolver = resolvers.get(resolvableProto.name)\n    if (resolver == null) {\n      throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n    }\n\n    const addresses = await resolver(this, options)\n    return addresses.map((a) => new Multiaddr(a))\n  }\n\n  /**\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\n   * is left out: in Node (and most network systems) the protocol is unknowable\n   * given only the address.\n   *\n   * Has to be a ThinWaist Address, otherwise throws error\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n   * // {family: 4, address: '127.0.0.1', port: 4001}\n   * ```\n   */\n  nodeAddress (): NodeAddress {\n    const options = this.toOptions()\n\n    if (options.transport !== 'tcp' && options.transport !== 'udp') {\n      throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`)\n    }\n\n    return {\n      family: options.family,\n      address: options.host,\n      port: options.port\n    }\n  }\n\n  /**\n   * Returns if a Multiaddr is a Thin Waist address or not.\n   *\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\n   *\n   * `{IPv4, IPv6}/{TCP, UDP}`\n   *\n   * @example\n   * ```js\n   * const mh1 = new Multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * const mh2 = new Multiaddr('/ip4/192.168.2.1/tcp/5001')\n   * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n   * const mh3 = mh1.encapsulate(mh2)\n   * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n   * const mh4 = new Multiaddr('/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n   * // <Multiaddr 047f0000010607d0de039302a503221220d52ebb89d85b02a284948203a62ff28389c57c9f42beec4ec20db76a64835843 - /ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a>\n   * mh1.isThinWaistAddress()\n   * // true\n   * mh2.isThinWaistAddress()\n   * // true\n   * mh3.isThinWaistAddress()\n   * // false\n   * mh4.isThinWaistAddress()\n   * // false\n   * ```\n   */\n  isThinWaistAddress (addr?: Multiaddr) {\n    const protos = (addr ?? this).protos()\n\n    if (protos.length !== 2) {\n      return false\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false\n    }\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Creates a Multiaddr from a node-friendly address object\n   *\n   * @example\n   * ```js\n   * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n   * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n   * ```\n   */\n  static fromNodeAddress (addr: NodeAddress, transport: string) {\n    if (addr == null) {\n      throw new Error('requires node address object')\n    }\n    if (transport == null) {\n      throw new Error('requires transport protocol')\n    }\n    let ip\n    switch (addr.family) {\n      case 4:\n        ip = 'ip4'\n        break\n      case 6:\n        ip = 'ip6'\n        break\n      default:\n        throw Error('Invalid addr family, should be 4 or 6.')\n    }\n    return new Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n  }\n\n  /**\n   * Returns if something is a Multiaddr that is a name\n   */\n  static isName (addr: Multiaddr) {\n    if (!Multiaddr.isMultiaddr(addr)) {\n      return false\n    }\n\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable)\n  }\n\n  /**\n   * Check if object is a CID instance\n   */\n  static isMultiaddr (value: any): value is Multiaddr {\n    return Boolean(value?.[symbol])\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * For post Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * console.log(new Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   */\n  [inspect] () {\n    return '<Multiaddr ' +\n    uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n    codec.bytesToString(this.bytes) + '>'\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string.\n   * Fallback for pre Node.js v10.0.0.\n   * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n   *\n   * @example\n   * ```js\n   * new Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n   * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n   * ```\n   */\n  inspect () {\n    return '<Multiaddr ' +\n      uint8ArrayToString(this.bytes, 'base16') + ' - ' +\n      codec.bytesToString(this.bytes) + '>'\n  }\n}\n\n/**\n * Static factory\n */\nexport function multiaddr (addr: MultiaddrInput) {\n  return new Multiaddr(addr)\n}\n\nexport { getProtocol as protocols }\nexport { resolvers }\n","export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n","import debug from 'debug'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base64 } from 'multiformats/bases/base64'\nimport type { PeerId } from '@libp2p/interfaces/peer-id'\nimport type { CID } from 'multiformats/cid'\nimport type { Key } from 'interface-datastore'\n\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = (v?: Uint8Array) => {\n  return v == null ? 'undefined' : base58btc.baseEncode(v)\n}\n\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = (v?: Uint8Array) => {\n  return v == null ? 'undefined' : base32.baseEncode(v)\n}\n\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = (v?: Uint8Array) => {\n  return v == null ? 'undefined' : base64.baseEncode(v)\n}\n\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = (v?: PeerId) => {\n  return v == null ? 'undefined' : v.toString()\n}\n\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = (v?: CID) => {\n  return v == null ? 'undefined' : v.toString()\n}\n\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = (v: Key) => {\n  return v == null ? 'undefined' : v.toString()\n}\n\nexport interface Logger {\n  (formatter: any, ...args: any[]): void\n  error: (formatter: any, ...args: any[]) => void\n  trace: (formatter: any, ...args: any[]) => void\n  enabled: boolean\n}\n\nexport function logger (name: string): Logger {\n  return Object.assign(debug(name), {\n    error: debug(`${name}:error`),\n    trace: debug(`${name}:trace`)\n  })\n}\n\nexport function disable () {\n  debug.disable()\n}\n\nexport function enable (namespaces: string) {\n  debug.enable(namespaces)\n}\n\nexport function enabled (namespaces: string) {\n  return debug.enabled(namespaces)\n}\n","/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n",null,null,null,"// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing alogrithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returs null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array (buf: Uint8Array): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  }\n\n  return buf\n}\n","import { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc (size: number = 0): Uint8Array {\n  if (globalThis.Buffer?.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size))\n  }\n\n  return new Uint8Array(size)\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe (size: number = 0): Uint8Array {\n  if (globalThis.Buffer?.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size))\n  }\n\n  return new Uint8Array(size)\n}\n","import type { MultibaseCodec } from 'multiformats'\nimport { bases } from 'multiformats/basics'\nimport { allocUnsafe } from '../alloc.js'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n","import bases, { SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString (array: Uint8Array, encoding: SupportedEncodings = 'utf8'): string {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8')\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n","import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nexport { isIP } from '@chainsafe/is-ip'\nexport const isV4 = isIPv4\nexport const isV6 = isIPv6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip: string): Uint8Array {\n  let offset = 0\n  ip = ip.toString().trim()\n\n  if (isV4(ip)) {\n    const bytes = new Uint8Array(offset + 4)\n\n    ip.split(/\\./g).forEach((byte) => {\n      bytes[offset++] = parseInt(byte, 10) & 0xff\n    })\n\n    return bytes\n  }\n\n  if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      let v4Buffer: Uint8Array | undefined\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer != null && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv: [number, number, ...string[]] = [i, 1]\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    const bytes = new Uint8Array(offset + 16)\n\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      bytes[offset++] = (word >> 8) & 0xff\n      bytes[offset++] = word & 0xff\n    }\n\n    return bytes\n  }\n\n  throw new Error('invalid ip address')\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf: Uint8Array, offset: number = 0, length?: number) {\n  offset = ~~offset\n  length = length ?? (buf.length - offset)\n\n  const view = new DataView(buf.buffer)\n\n  if (length === 4) {\n    const result = []\n\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buf[offset + i])\n    }\n\n    return result.join('.')\n  }\n\n  if (length === 16) {\n    const result = []\n\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n\n    return result.join(':')\n      .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n      .replace(/:{3,4}/, '::')\n  }\n\n  return ''\n}\n","import type { Protocol } from './index.js'\n\nconst V = -1\nexport const names: Record<string, Protocol> = {}\nexport const codes: Record<number, Protocol> = {}\n\nexport const table: Array<[number, number, string, boolean?, boolean?]> = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', true],\n  [54, V, 'dns4', true],\n  [55, V, 'dns6', true],\n  [56, V, 'dnsaddr', true],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [280, 0, 'webrtc'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, true],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [461, 0, 'quic-v1'],\n  [465, 0, 'webtransport'],\n  [466, V, 'certhash'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\n// populate tables\ntable.forEach(row => {\n  const proto = createProtocol(...row)\n  codes[proto.code] = proto\n  names[proto.name] = proto\n})\n\nexport function createProtocol (code: number, size: number, name: string, resolvable?: any, path?: any): Protocol {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol (proto: number | string): Protocol {\n  if (typeof proto === 'number') {\n    if (codes[proto] != null) {\n      return codes[proto]\n    }\n\n    throw new Error(`no protocol with code: ${proto}`)\n  } else if (typeof proto === 'string') {\n    if (names[proto] != null) {\n      return names[proto]\n    }\n\n    throw new Error(`no protocol with name: ${proto}`)\n  }\n\n  throw new Error(`invalid protocol id type: ${typeof proto}`)\n}\n","import bases, { SupportedEncodings } from './util/bases.js'\nimport { asUint8Array } from './util/as-uint8array.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'))\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n","import { allocUnsafe } from './alloc.js'\nimport { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nexport function concat (arrays: Array<ArrayLike<number>>, length?: number): Uint8Array {\n  if (length == null) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = allocUnsafe(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return asUint8Array(output)\n}\n","/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\nimport * as ip from './ip.js'\nimport { getProtocol } from './protocols-table.js'\nimport { CID } from 'multiformats/cid'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport * as Digest from 'multiformats/hashes/digest'\nimport varint from 'varint'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\n\n/**\n * converts (serializes) addresses\n */\nexport function convert (proto: string, a: string): Uint8Array\nexport function convert (proto: string, a: Uint8Array): string\nexport function convert (proto: string, a: string | Uint8Array): Uint8Array | string {\n  if (a instanceof Uint8Array) {\n    return convertToString(proto, a)\n  } else {\n    return convertToBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString (proto: number | string, buf: Uint8Array): string {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    case 466: // certhash\n      return bytes2mb(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nexport function convertToBytes (proto: string | number, str: string): Uint8Array {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    case 466: // certhash\n      return mb2bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nconst decoders = Object.values(bases).map((c) => c.decoder)\nconst anybaseDecoder = (function () {\n  let acc = decoders[0].or(decoders[1])\n  decoders.slice(2).forEach((d) => (acc = acc.or(d)))\n  return acc\n})()\n\nfunction ip2bytes (ipString: string): Uint8Array {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff: Uint8Array): string {\n  const ipString = ip.toString(ipBuff, 0, ipBuff.length)\n  if (ipString == null) {\n    throw new Error('ipBuff is required')\n  }\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2bytes (port: number): Uint8Array {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf: Uint8Array): number {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset)\n}\n\nfunction str2bytes (str: string): Uint8Array {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash: string): Uint8Array {\n  let mh\n\n  if (hash[0] === 'Q' || hash[0] === '1') {\n    mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes\n  } else {\n    mh = CID.parse(hash).multihash.bytes\n  }\n\n  // the address is a varint prefixed multihash string representation\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction mb2bytes (mbstr: string): Uint8Array {\n  const mb = anybaseDecoder.decode(mbstr)\n  const size = Uint8Array.from(varint.encode(mb.length))\n  return uint8ArrayConcat([size, mb], size.length + mb.length)\n}\nfunction bytes2mb (buf: Uint8Array) {\n  const size = varint.decode(buf)\n  const hash = buf.slice(varint.decode.bytes)\n\n  if (hash.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return 'u' + uint8ArrayToString(hash, 'base64url')\n}\n\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 16) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 56) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`)\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode(`b${addr[0]}`)\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf: Uint8Array): string {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return `${addr}:${port}`\n}\n","import { convertToBytes, convertToString } from './convert.js'\nimport { getProtocol } from './protocols-table.js'\nimport varint from 'varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { StringTuple, Tuple, Protocol } from './index.js'\n\n/**\n * string -> [[str name, str addr]... ]\n */\nexport function stringToStringTuples (str: string): string[][] {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = getProtocol(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path === true) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n/**\n * [[str name, str addr]... ] -> string\n */\nexport function stringTuplesToString (tuples: StringTuple[]): string {\n  const parts: string[] = []\n  tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1 && tup[1] != null) {\n      parts.push(tup[1])\n    }\n    return null\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nexport function stringTuplesToTuples (tuples: Array<string[] | string>): Tuple[] {\n  return tuples.map((tup) => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convertToBytes(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nexport function tuplesToStringTuples (tuples: Tuple[]): StringTuple[] {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup[1] != null) {\n      return [proto.code, convertToString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nexport function tuplesToBytes (tuples: Tuple[]): Uint8Array {\n  return fromBytes(uint8ArrayConcat(tuples.map((tup) => {\n    const proto = protoFromTuple(tup)\n    let buf = Uint8Array.from(varint.encode(proto.code))\n\n    if (tup.length > 1 && tup[1] != null) {\n      buf = uint8ArrayConcat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\n/**\n * For the passed address, return the serialized size\n */\nexport function sizeForAddr (p: Protocol, addr: Uint8Array | number[]): number {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + (varint.decode.bytes ?? 0)\n  }\n}\n\nexport function bytesToTuples (buf: Uint8Array): Tuple[] {\n  const tuples: Array<[number, Uint8Array?]> = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes ?? 0\n\n    const p = getProtocol(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address Uint8Array: ' + uint8ArrayToString(buf, 'base16'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n/**\n * Uint8Array -> String\n */\nexport function bytesToString (buf: Uint8Array): string {\n  const a = bytesToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n/**\n * String -> Uint8Array\n */\nexport function stringToBytes (str: string): Uint8Array {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBytes(b)\n}\n\n/**\n * String -> Uint8Array\n */\nexport function fromString (str: string): Uint8Array {\n  return stringToBytes(str)\n}\n\n/**\n * Uint8Array -> Uint8Array\n */\nexport function fromBytes (buf: Uint8Array): Uint8Array {\n  const err = validateBytes(buf)\n  if (err != null) {\n    throw err\n  }\n  return Uint8Array.from(buf) // copy\n}\n\nexport function validateBytes (buf: Uint8Array): Error | undefined {\n  try {\n    bytesToTuples(buf) // try to parse. will throw if breaks\n  } catch (err: any) {\n    return err\n  }\n}\n\nexport function isValidBytes (buf: Uint8Array): boolean {\n  return validateBytes(buf) === undefined\n}\n\nexport function cleanPath (str: string): string {\n  return '/' + str.trim().split('/').filter((a) => a).join('/')\n}\n\nexport function ParseError (str: string): Error {\n  return new Error('Error parsing address: ' + str)\n}\n\nexport function protoFromTuple (tup: any[]): Protocol {\n  const proto = getProtocol(tup[0])\n  return proto\n}\n","/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\n\nimport * as codec from './codec.js'\nimport { getProtocol, names } from './protocols-table.js'\nimport varint from 'varint'\nimport { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport errCode from 'err-code'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst DNS_CODES = [\n  getProtocol('dns').code,\n  getProtocol('dns4').code,\n  getProtocol('dns6').code,\n  getProtocol('dnsaddr').code\n]\n\nconst P2P_CODES = [\n  getProtocol('p2p').code,\n  getProtocol('ipfs').code\n]\n\n/**\n * Protocols are present in the protocol table\n */\nexport interface Protocol {\n  code: number\n  size: number\n  name: string\n  resolvable?: boolean | undefined\n  path?: boolean | undefined\n}\n\n/**\n * A plain JavaScript object representation of a {@link Multiaddr}\n */\nexport interface MultiaddrObject {\n  family: 4 | 6\n  host: string\n  transport: string\n  port: number\n}\n\n/**\n * A NodeAddress is an IPv4/IPv6 address/TCP port combination\n */\nexport interface NodeAddress {\n  family: 4 | 6\n  address: string\n  port: number\n}\n\n/**\n * These types can be parsed into a {@link Multiaddr} object\n */\nexport type MultiaddrInput = string | Multiaddr | Uint8Array | null\n\n/**\n * A Resolver is a function that takes a {@link Multiaddr} and resolves it into one\n * or more string representations of that {@link Multiaddr}.\n */\nexport interface Resolver { (addr: Multiaddr, options?: AbortOptions): Promise<string[]> }\n\n/**\n * A code/value pair\n */\nexport type Tuple = [number, Uint8Array?]\n\n/**\n * A code/value pair with the value as a string\n */\nexport type StringTuple = [number, string?]\n\n/**\n * Allows aborting long-lived operations\n */\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\n/**\n * All configured {@link Resolver}s\n */\nexport const resolvers = new Map<string, Resolver>()\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr')\n\nexport interface Multiaddr {\n  bytes: Uint8Array\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString: () => string\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * JSON.stringify(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON: () => string\n\n  /**\n   * Returns Multiaddr as a convinient options object to be used with net.createConnection\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n   * // { family: 4, host: '127.0.0.1', transport: 'tcp', port: 4001 }\n   * ```\n   */\n  toOptions: () => MultiaddrObject\n\n  /**\n   * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n   * left-to-right order. Each object contains the protocol code, protocol name,\n   * and the size of its address space in bits.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n   * // [ { code: 4, size: 32, name: 'ip4' },\n   * //   { code: 6, size: 16, name: 'tcp' } ]\n   * ```\n   */\n  protos: () => Protocol[]\n\n  /**\n   * Returns the codes of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n   * // [ 4, 6 ]\n   * ```\n   */\n  protoCodes: () => number[]\n\n  /**\n   * Returns the names of the protocols in left-to-right order.\n   * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n   * // [ 'ip4', 'tcp' ]\n   * ```\n   */\n  protoNames: () => string[]\n\n  /**\n   * Returns a tuple of parts\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').tuples()\n   * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n   * ```\n   */\n  tuples: () => Tuple[]\n\n  /**\n   * Returns a tuple of string/number parts\n   * - tuples[][0] = code of protocol\n   * - tuples[][1] = contents of address\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').stringTuples()\n   * // [ [ 4, '127.0.0.1' ], [ 6, '4001' ] ]\n   * ```\n   */\n  stringTuples: () => StringTuple[]\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate: (addr: MultiaddrInput) => Multiaddr\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   */\n  decapsulate: (addr: Multiaddr | string) => Multiaddr\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a\n   * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const addr = multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // Multiaddr(/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC)\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   */\n  decapsulateCode: (code: number) => Multiaddr\n\n  /**\n   * Extract the peerId if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string)\n   *\n   * // should return QmValidBase58string or null if the id is missing or invalid\n   * const peerId = mh1.getPeerId()\n   * ```\n   */\n  getPeerId: () => string | null\n\n  /**\n   * Extract the path if the multiaddr contains one\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock)\n   *\n   * // should return utf8 string or null if the id is missing or invalid\n   * const path = mh1.getPath()\n   * ```\n   */\n  getPath: () => string | null\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   */\n  equals: (addr: { bytes: Uint8Array }) => boolean\n\n  /**\n   * Resolve multiaddr if containing resolvable hostname.\n   *\n   * @example\n   * ```js\n   * import { multiaddr, resolvers } from '@multiformats/multiaddr'\n   *\n   * resolvers.set('dnsaddr', resolverFunction)\n   * const mh1 = multiaddr('/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb')\n   * const resolvedMultiaddrs = await mh1.resolve()\n   * // [\n   * //   Multiaddr(/ip4/147.75.83.83/tcp/4001/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb),\n   * //   Multiaddr(/ip4/147.75.83.83/tcp/443/wss/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb),\n   * //   Multiaddr(/ip4/147.75.83.83/udp/4001/quic/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb)\n   * // ]\n   * ```\n   */\n  resolve: (options?: AbortOptions) => Promise<Multiaddr[]>\n\n  /**\n   * Gets a Multiaddrs node-friendly address object. Note that protocol information\n   * is left out: in Node (and most network systems) the protocol is unknowable\n   * given only the address.\n   *\n   * Has to be a ThinWaist Address, otherwise throws error\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n   * // {family: 4, address: '127.0.0.1', port: 4001}\n   * ```\n   */\n  nodeAddress: () => NodeAddress\n\n  /**\n   * Returns if a Multiaddr is a Thin Waist address or not.\n   *\n   * Thin Waist is if a Multiaddr adheres to the standard combination of:\n   *\n   * `{IPv4, IPv6}/{TCP, UDP}`\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   * const mh2 = multiaddr('/ip4/192.168.2.1/tcp/5001')\n   * // Multiaddr(/ip4/192.168.2.1/tcp/5001)\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001)\n   * const mh4 = multiaddr('/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/2000/wss/p2p-webrtc-star/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSooo2a)\n   * mh1.isThinWaistAddress()\n   * // true\n   * mh2.isThinWaistAddress()\n   * // true\n   * mh3.isThinWaistAddress()\n   * // false\n   * mh4.isThinWaistAddress()\n   * // false\n   * ```\n   */\n  isThinWaistAddress: (addr?: Multiaddr) => boolean\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nexport function fromNodeAddress (addr: NodeAddress, transport: string): Multiaddr {\n  if (addr == null) {\n    throw new Error('requires node address object')\n  }\n  if (transport == null) {\n    throw new Error('requires transport protocol')\n  }\n  let ip\n  switch (addr.family) {\n    case 4:\n      ip = 'ip4'\n      break\n    case 6:\n      ip = 'ip6'\n      break\n    default:\n      throw Error('Invalid addr family, should be 4 or 6.')\n  }\n  return new DefaultMultiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n}\n\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nexport function isName (addr: Multiaddr): boolean {\n  if (!isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr (value: any): value is Multiaddr {\n  return Boolean(value?.[symbol])\n}\n\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr implements Multiaddr {\n  public bytes: Uint8Array\n  #string?: string\n  #tuples?: Tuple[]\n  #stringTuples?: StringTuple[]\n\n  [symbol]: boolean = true\n\n  constructor (addr?: MultiaddrInput) {\n    // default\n    if (addr == null) {\n      addr = ''\n    }\n\n    if (addr instanceof Uint8Array) {\n      this.bytes = codec.fromBytes(addr)\n    } else if (typeof addr === 'string') {\n      if (addr.length > 0 && addr.charAt(0) !== '/') {\n        throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n      }\n      this.bytes = codec.fromString(addr)\n    } else if (isMultiaddr(addr)) { // Multiaddr\n      this.bytes = codec.fromBytes(addr.bytes) // validate + copy buffer\n    } else {\n      throw new Error('addr must be a string, Buffer, or another Multiaddr')\n    }\n  }\n\n  toString () {\n    if (this.#string == null) {\n      this.#string = codec.bytesToString(this.bytes)\n    }\n\n    return this.#string\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  toOptions (): MultiaddrObject {\n    const codes = this.protoCodes()\n    const parts = this.toString().split('/').slice(1)\n    let transport: string\n    let port: number\n\n    if (parts.length > 2) {\n      // default to https when protocol & port are omitted from DNS addrs\n      if (DNS_CODES.includes(codes[0]) && P2P_CODES.includes(codes[1])) {\n        transport = getProtocol('tcp').name\n        port = 443\n      } else {\n        transport = getProtocol(parts[2]).name\n        port = parseInt(parts[3])\n      }\n    } else if (DNS_CODES.includes(codes[0])) {\n      transport = getProtocol('tcp').name\n      port = 443\n    } else {\n      throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".')\n    }\n\n    const opts: MultiaddrObject = {\n      family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n      host: parts[1],\n      transport,\n      port\n    }\n\n    return opts\n  }\n\n  protos (): Protocol[] {\n    return this.protoCodes().map(code => Object.assign({}, getProtocol(code)))\n  }\n\n  protoCodes (): number[] {\n    const codes: number[] = []\n    const buf = this.bytes\n    let i = 0\n    while (i < buf.length) {\n      const code = varint.decode(buf, i)\n      const n = varint.decode.bytes ?? 0\n\n      const p = getProtocol(code)\n      const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n      i += (size + n)\n      codes.push(code)\n    }\n\n    return codes\n  }\n\n  protoNames (): string[] {\n    return this.protos().map(proto => proto.name)\n  }\n\n  tuples (): Array<[number, Uint8Array?]> {\n    if (this.#tuples == null) {\n      this.#tuples = codec.bytesToTuples(this.bytes)\n    }\n\n    return this.#tuples\n  }\n\n  stringTuples (): Array<[number, string?]> {\n    if (this.#stringTuples == null) {\n      this.#stringTuples = codec.tuplesToStringTuples(this.tuples())\n    }\n\n    return this.#stringTuples\n  }\n\n  encapsulate (addr: MultiaddrInput): Multiaddr {\n    addr = new DefaultMultiaddr(addr)\n    return new DefaultMultiaddr(this.toString() + addr.toString())\n  }\n\n  decapsulate (addr: Multiaddr | string): Multiaddr {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n    if (i < 0) {\n      throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`)\n    }\n    return new DefaultMultiaddr(s.slice(0, i))\n  }\n\n  decapsulateCode (code: number): Multiaddr {\n    const tuples = this.tuples()\n    for (let i = tuples.length - 1; i >= 0; i--) {\n      if (tuples[i][0] === code) {\n        return new DefaultMultiaddr(codec.tuplesToBytes(tuples.slice(0, i)))\n      }\n    }\n    return this\n  }\n\n  getPeerId (): string | null {\n    try {\n      const tuples = this.stringTuples().filter((tuple) => {\n        if (tuple[0] === names.ipfs.code) {\n          return true\n        }\n        return false\n      })\n\n      // Get the last ipfs tuple ['ipfs', 'peerid string']\n      const tuple = tuples.pop()\n      if (tuple?.[1] != null) {\n        const peerIdStr = tuple[1]\n\n        // peer id is base58btc encoded string but not multibase encoded so add the `z`\n        // prefix so we can validate that it is correctly encoded\n        if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n          return uint8ArrayToString(base58btc.decode(`z${peerIdStr}`), 'base58btc')\n        }\n\n        // try to parse peer id as CID\n        return uint8ArrayToString(CID.parse(peerIdStr).multihash.bytes, 'base58btc')\n      }\n\n      return null\n    } catch (e) {\n      return null\n    }\n  }\n\n  getPath (): string | null {\n    let path = null\n    try {\n      path = this.stringTuples().filter((tuple) => {\n        const proto = getProtocol(tuple[0])\n        if (proto.path === true) {\n          return true\n        }\n        return false\n      })[0][1]\n\n      if (path == null) {\n        path = null\n      }\n    } catch {\n      path = null\n    }\n    return path\n  }\n\n  equals (addr: { bytes: Uint8Array }): boolean {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  async resolve (options?: AbortOptions): Promise<Multiaddr[]> {\n    const resolvableProto = this.protos().find((p) => p.resolvable)\n\n    // Multiaddr is not resolvable?\n    if (resolvableProto == null) {\n      return [this]\n    }\n\n    const resolver = resolvers.get(resolvableProto.name)\n    if (resolver == null) {\n      throw errCode(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER')\n    }\n\n    const addresses = await resolver(this, options)\n    return addresses.map((a) => new DefaultMultiaddr(a))\n  }\n\n  nodeAddress (): NodeAddress {\n    const options = this.toOptions()\n\n    if (options.transport !== 'tcp' && options.transport !== 'udp') {\n      throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`)\n    }\n\n    return {\n      family: options.family,\n      address: options.host,\n      port: options.port\n    }\n  }\n\n  isThinWaistAddress (addr?: Multiaddr): boolean {\n    const protos = (addr ?? this).protos()\n\n    if (protos.length !== 2) {\n      return false\n    }\n\n    if (protos[0].code !== 4 && protos[0].code !== 41) {\n      return false\n    }\n    if (protos[1].code !== 6 && protos[1].code !== 273) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n   * ```\n   */\n  [inspect] (): string {\n    return `Multiaddr(${codec.bytesToString(this.bytes)})`\n  }\n}\n\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr (addr?: MultiaddrInput): Multiaddr {\n  return new DefaultMultiaddr(addr)\n}\n\nexport { getProtocol as protocols }\n","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals (a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import type { Multiaddr } from '@multiformats/multiaddr'\nimport { multiaddr } from '@multiformats/multiaddr'\n\nexport interface MultiaddrToUriOpts {\n  assumeHttp?: boolean\n}\n\ninterface Reducer { (str: string, content: string, i: number, parts: Part[], opts?: MultiaddrToUriOpts): string }\n\nconst reduceValue: Reducer = (_, v) => v\nconst tcpUri = (str: string, port: string, parts: Part[], opts?: MultiaddrToUriOpts) => {\n  // return tcp when explicitly requested\n  if ((opts != null) && opts.assumeHttp === false) return `tcp://${str}:${port}`\n  // check if tcp is the last protocol in multiaddr\n  let protocol = 'tcp'\n  let explicitPort = `:${port}`\n  const last = parts[parts.length - 1]\n  if (last.protocol === 'tcp') {\n    // assume http and produce clean urls\n    protocol = port === '443' ? 'https' : 'http'\n    explicitPort = port === '443' || port === '80' ? '' : explicitPort\n  }\n  return `${protocol}://${str}${explicitPort}`\n}\n\nconst Reducers: Record<string, Reducer> = {\n  ip4: reduceValue,\n  ip6: (str, content, i, parts) => (\n    parts.length === 1 && parts[0].protocol === 'ip6'\n      ? content\n      : `[${content}]`\n  ),\n  tcp: (str, content, i, parts, opts) => (\n    parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n      ? `${str}:${content}`\n      : tcpUri(str, content, parts, opts)\n  ),\n  udp: (str, content) => `udp://${str}:${content}`,\n  dnsaddr: reduceValue,\n  dns4: reduceValue,\n  dns6: reduceValue,\n  ipfs: (str, content) => `${str}/ipfs/${content}`,\n  p2p: (str, content) => `${str}/p2p/${content}`,\n  http: str => `http://${str}`,\n  https: str => `https://${str}`,\n  ws: str => `ws://${str}`,\n  wss: str => `wss://${str}`,\n  'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n  'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n  'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n}\n\ninterface Part {\n  protocol: string\n  content: string\n}\n\nexport function multiaddrToUri (input: Multiaddr | string | Uint8Array, opts?: MultiaddrToUriOpts) {\n  const ma = multiaddr(input)\n  const parts = ma.toString().split('/').slice(1)\n  return ma\n    .tuples()\n    .map(tuple => ({\n      protocol: parts.shift() ?? '',\n      content: (tuple[1] != null) ? parts.shift() ?? '' : ''\n    }))\n    .reduce((str: string, part: Part, i: number, parts: Part[]) => {\n      const reduce = Reducers[part.protocol]\n      if (reduce == null) {\n        throw new Error(`Unsupported protocol ${part.protocol}`)\n      }\n      return reduce(str, part.content, i, parts, opts)\n    }, '')\n}\n","import { Multiaddr } from '@multiformats/multiaddr'\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nexport function toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = multiaddrToUri(new Multiaddr(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n","\nexport default () => {}\n","\n/* eslint-env browser */\n\nimport { Multiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || Multiaddr.isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || Multiaddr.isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n","\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","import errCode from 'err-code'\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n","import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlist = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlist\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n","var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n","import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n","const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n","import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing alogrithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n","import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n","import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n","import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n","import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returs null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n","// @ts-check\n\nimport { from } from './base.js'\nimport { fromString, toString } from '../bytes.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n","import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n","import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n","// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n","import { from } from './base.js'\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n","import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n","/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n","import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n","// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n","// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => JSON.parse(textDecoder.decode(data))\n","// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n","/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals (a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n","import type { CID } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nexport type PeerIdType = 'RSA' | 'Ed25519' | 'secp256k1'\n\ninterface BasePeerId {\n  readonly type: PeerIdType\n  readonly multihash: MultihashDigest\n  readonly privateKey?: Uint8Array\n  readonly publicKey?: Uint8Array\n\n  toString: () => string\n  toCID: () => CID\n  toBytes: () => Uint8Array\n  equals: (other: PeerId | Uint8Array | string) => boolean\n}\n\nexport interface RSAPeerId extends BasePeerId {\n  readonly type: 'RSA'\n  readonly publicKey?: Uint8Array\n}\n\nexport interface Ed25519PeerId extends BasePeerId {\n  readonly type: 'Ed25519'\n  readonly publicKey: Uint8Array\n}\n\nexport interface Secp256k1PeerId extends BasePeerId {\n  readonly type: 'secp256k1'\n  readonly publicKey: Uint8Array\n}\n\nexport type PeerId = RSAPeerId | Ed25519PeerId | Secp256k1PeerId\n\nexport const symbol = Symbol.for('@libp2p/peer-id')\n\nexport function isPeerId (other: any): other is PeerId {\n  return other != null && Boolean(other[symbol])\n}\n","import { CID } from 'multiformats/cid'\nimport { bases } from 'multiformats/basics'\nimport { base58btc } from 'multiformats/bases/base58'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport errcode from 'err-code'\nimport { Ed25519PeerId, PeerIdType, RSAPeerId, Secp256k1PeerId, symbol } from '@libp2p/interface-peer-id'\nimport type { MultibaseDecoder } from 'multiformats/bases/interface'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst baseDecoder = Object\n  .values(bases)\n  .map(codec => codec.decoder)\n  // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n  .reduce((acc, curr) => acc.or(curr), bases.identity.decoder)\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\n\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37\n\ninterface PeerIdInit {\n  type: PeerIdType\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface RSAPeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n  publicKey?: Uint8Array\n}\n\ninterface Ed25519PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface Secp256k1PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\nclass PeerIdImpl {\n  public type: PeerIdType\n  public readonly multihash: MultihashDigest\n  public readonly privateKey?: Uint8Array\n  public readonly publicKey?: Uint8Array\n  private string?: string\n\n  constructor (init: PeerIdInit) {\n    this.type = init.type\n    this.multihash = init.multihash\n    this.privateKey = init.privateKey\n\n    // mark string cache as non-enumerable\n    Object.defineProperty(this, 'string', {\n      enumerable: false,\n      writable: true\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return `PeerId(${this.toString()})`\n  }\n\n  get [symbol] () {\n    return true\n  }\n\n  toString () {\n    if (this.string == null) {\n      this.string = base58btc.encode(this.multihash.bytes).slice(1)\n    }\n\n    return this.string\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toCID () {\n    return CID.createV1(LIBP2P_KEY_CODE, this.multihash)\n  }\n\n  toBytes () {\n    return this.multihash.bytes\n  }\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId\n   */\n  equals (id: PeerId | Uint8Array | string): boolean {\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.multihash.bytes, id)\n    } else if (typeof id === 'string') {\n      return peerIdFromString(id).equals(this as PeerId)\n    } else if (id?.multihash?.bytes != null) {\n      return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n\n  /**\n   * Returns PeerId as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```js\n   * import { peerIdFromString } from '@libp2p/peer-id'\n   *\n   * console.info(peerIdFromString('QmFoo'))\n   * // 'PeerId(QmFoo)'\n   * ```\n   */\n  [inspect] (): string {\n    return `PeerId(${this.toString()})`\n  }\n}\n\nclass RSAPeerIdImpl extends PeerIdImpl implements RSAPeerId {\n  public readonly type = 'RSA'\n  public readonly publicKey?: Uint8Array\n\n  constructor (init: RSAPeerIdInit) {\n    super({ ...init, type: 'RSA' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nclass Ed25519PeerIdImpl extends PeerIdImpl implements Ed25519PeerId {\n  public readonly type = 'Ed25519'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Ed25519PeerIdInit) {\n    super({ ...init, type: 'Ed25519' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nclass Secp256k1PeerIdImpl extends PeerIdImpl implements Secp256k1PeerId {\n  public readonly type = 'secp256k1'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Secp256k1PeerIdInit) {\n    super({ ...init, type: 'secp256k1' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nexport function createPeerId (init: PeerIdInit): PeerId {\n  if (init.type === 'RSA') {\n    return new RSAPeerIdImpl(init)\n  }\n\n  if (init.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(init)\n  }\n\n  if (init.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(init)\n  }\n\n  throw errcode(new Error('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"'), 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromPeerId (other: any): PeerId {\n  if (other.type === 'RSA') {\n    return new RSAPeerIdImpl(other)\n  }\n\n  if (other.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(other)\n  }\n\n  if (other.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(other)\n  }\n\n  throw errcode(new Error('Not a PeerId'), 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromString (str: string, decoder?: MultibaseDecoder<any>): PeerId {\n  decoder = decoder ?? baseDecoder\n\n  if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n    // identity hash ed25519/secp256k1 key or sha2-256 hash of\n    // rsa public key - base58btc encoded either way\n    const multihash = Digest.decode(base58btc.decode(`z${str}`))\n\n    if (str.startsWith('12D')) {\n      return new Ed25519PeerIdImpl({ multihash })\n    } else if (str.startsWith('16U')) {\n      return new Secp256k1PeerIdImpl({ multihash })\n    } else {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  }\n\n  return peerIdFromBytes(baseDecoder.decode(str))\n}\n\nexport function peerIdFromBytes (buf: Uint8Array) {\n  try {\n    const multihash = Digest.decode(buf)\n\n    if (multihash.code === identity.code) {\n      if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash })\n      } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash })\n      }\n    }\n\n    if (multihash.code === sha256.code) {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  } catch {\n    return peerIdFromCID(CID.decode(buf))\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\nexport function peerIdFromCID (cid: CID): PeerId {\n  if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n    throw new Error('Supplied PeerID CID is invalid')\n  }\n\n  const multihash = cid.multihash\n\n  if (multihash.code === sha256.code) {\n    return new RSAPeerIdImpl({ multihash: cid.multihash })\n  } else if (multihash.code === identity.code) {\n    if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n      return new Ed25519PeerIdImpl({ multihash: cid.multihash })\n    } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n      return new Secp256k1PeerIdImpl({ multihash: cid.multihash })\n    }\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys (publicKey: Uint8Array, privateKey?: Uint8Array): Promise<PeerId> {\n  if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n    return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n    return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey })\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createUnwant = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createStat } from './stat.js'\nimport { createUnwant } from './unwant.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBitswap (config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {BlockAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return new Uint8Array(await res.arrayBuffer())\n  }\n  return get\n})\n","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nexport function isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nexport function isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nexport function isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nexport const isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n","import errCode from 'err-code'\nimport itPeekable from 'it-peekable'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport all from 'it-all'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js'\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if (isBytes(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import { normaliseContent } from './normalise-content.browser.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nexport function normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return normaliseCandidateMultiple(input, normaliseContent, true)\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js'\nimport { modeToString } from './mode-to-string.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nexport async function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n","import { anySignal } from 'any-signal'\n\n/**\n * @param {any[]} signals\n * @returns {AbortSignal[]}\n */\nfunction filter (signals) {\n  return signals.filter(Boolean)\n}\n\n/**\n * @param  {...AbortSignal|undefined} signals\n */\nexport function abortSignal (...signals) {\n  return anySignal(filter(signals))\n}\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BlockAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n\n  return stat\n})\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBlock (config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createAdd = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return add\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createClear = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return clear\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return list\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return reset\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"rm\"]}\n   */\n  async function rm (addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return rm\n})\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBootstrap (config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  }\n}\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createApply = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n","\n/**\n * Convert object properties to camel case.\n * NOT recursive!\n * e.g.\n * AgentVersion => agentVersion\n * ID => id\n *\n * @param {Record<string, any>} obj\n */\nexport function objectToCamel (obj) {\n  if (obj == null) {\n    return obj\n  }\n\n  const caps = /^[A-Z]+$/\n\n  /** @type {Record<string, any>} */\n  const output = {}\n\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) { // all caps\n      camelObj[k.toLowerCase()] = obj[k]\n    } else if (caps.test(k[0])) { // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\n    } else {\n      camelObj[k] = obj[k]\n    }\n    return camelObj\n  }, output)\n}\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n","import { createApply } from './apply.js'\nimport { createList } from './list.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createProfiles (config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createReplace = configure(api => {\n  /**\n   * @type {ConfigAPI[\"replace\"]}\n   */\n  const replace = async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n\n  return replace\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createSet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"set\"]}\n   */\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return set\n})\n\n/**\n * @param {*} key\n * @param {*} value\n */\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return { arg: [key, value.toString()], bool: true }\n    case 'string':\n      return { arg: [key, value] }\n    default:\n      return { arg: [key, JSON.stringify(value)], json: true }\n  }\n}\n","import { createProfiles } from './profiles/index.js'\nimport { createGet } from './get.js'\nimport { createGetAll } from './get-all.js'\nimport { createReplace } from './replace.js'\nimport { createSet } from './set.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createConfig (config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nexport async function * resolve (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { resolve } from '../lib/resolve.js'\nimport first from 'it-first'\nimport last from 'it-last'\nimport errCode from 'err-code'\nimport { createGet as createBlockGet } from '../block/get.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    /**\n     * @type {DAGAPI[\"put\"]}\n     */\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      }\n\n      let serialized\n\n      if (settings.inputCodec) {\n        // if you supply an inputCodec, we assume you're passing in a raw, encoded\n        // block using that codec, so we'll just pass that on to the server and let\n        // it deal with the decode/encode/store cycle\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        serialized = dagNode\n      } else {\n        // if you don't supply an inputCodec, we assume you've passed in a JavaScript\n        // object you want to have encoded using storeCodec, so we'll prepare it for\n        // you if we have the codec\n        const storeCodec = await codecs.getCodec(settings.storeCodec)\n        serialized = storeCodec.encode(dagNode)\n        // now we have a serialized form, the server should be told to receive it\n        // in that format\n        settings.inputCodec = settings.storeCodec\n      }\n\n      // allow aborting requests on body errors\n      const controller = new AbortController()\n      const signal = abortSignal(controller.signal, settings.signal)\n\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...(\n          await multipartRequest([serialized], controller, settings.headers)\n        )\n      })\n      const data = await res.json()\n\n      return CID.parse(data.Cid['/'])\n    }\n\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createDag (codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  }\n}\n","\n// Response types are defined here =\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\nexport const SendingQuery = 0\nexport const PeerResponse = 1\nexport const FinalPeer = 2\nexport const QueryError = 3\nexport const Provider = 4\nexport const Value = 5\nexport const AddingPeer = 6\nexport const DialingPeer = 7\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interfaces/peer-id').PeerId} PeerId\n */\n\n/**\n * @param {{Type: number, ID: string, Extra: string, Responses: {ID: string, Addrs: string[]}[]}} event\n * @returns {import('ipfs-core-types/src/dht').QueryEvent}\n */\nexport const mapEvent = (event) => {\n  if (event.Type === SendingQuery) {\n    return {\n      name: 'SENDING_QUERY',\n      type: event.Type\n    }\n  }\n\n  if (event.Type === PeerResponse) {\n    return {\n      from: peerIdFromString(event.ID),\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      // TODO: how to infer this from the go-ipfs response\n      messageType: 0,\n      // TODO: how to infer this from the go-ipfs response\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => new Multiaddr(addr)), protocols: [] })),\n      providers: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => new Multiaddr(addr)), protocols: [] }))\n      // TODO: how to infer this from the go-ipfs response\n      // record: ???\n    }\n  }\n\n  if (event.Type === FinalPeer) {\n    // dht.query ends with a FinalPeer event with no Responses\n    /** @type {import('@libp2p/interfaces/peer-info').PeerInfo} */\n    let peer = {\n      // @ts-expect-error go-ipfs does not return this\n      id: event.ID ?? peerIdFromString(event.ID),\n      /** @type {Multiaddr[]} */\n      multiaddrs: [],\n      protocols: []\n    }\n\n    if (event.Responses && event.Responses.length) {\n      // dht.findPeer has the result in the Responses field\n      peer = {\n        id: peerIdFromString(event.Responses[0].ID),\n        multiaddrs: event.Responses[0].Addrs.map(addr => new Multiaddr(addr)),\n        protocols: []\n      }\n    }\n\n    return {\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    }\n  }\n\n  if (event.Type === QueryError) {\n    return {\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    }\n  }\n\n  if (event.Type === Provider) {\n    return {\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => new Multiaddr(addr)), protocols: [] }))\n    }\n  }\n\n  if (event.Type === Value) {\n    return {\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    }\n  }\n\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ ID }) => peerIdFromString(ID))\n\n    if (!peers.length) {\n      throw new Error('No peer found')\n    }\n\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    }\n  }\n\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: peerIdFromString(event.ID)\n    }\n  }\n\n  throw new Error('Unknown DHT event type')\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindPeer = configure(api => {\n  /**\n   * @type {DHTAPI[\"findPeer\"]}\n   */\n  async function * findPeer (peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findPeer\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindProvs = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findProvs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createQuery = configure(api => {\n  /**\n   * @type {DHTAPI[\"query\"]}\n   */\n  async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return query\n})\n","import { createFindPeer } from './find-peer.js'\nimport { createFindProvs } from './find-provs.js'\nimport { createGet } from './get.js'\nimport { createProvide } from './provide.js'\nimport { createPut } from './put.js'\nimport { createQuery } from './query.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDht (config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createCmds = configure(api => {\n  /**\n   * @type {DiagAPI[\"cmds\"]}\n   */\n  async function cmds (options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return cmds\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createNet = configure(api => {\n  /**\n   * @type {DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createSys = configure(api => {\n  /**\n   * @type {DiagAPI[\"sys\"]}\n   */\n  async function sys (options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return sys\n})\n","import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDiag (config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createFlush = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n","import { objectToCamel } from './object-to-camel.js'\n\n/**\n * @param {Record<string, any>} entry\n */\nexport function objectToCamelWithMetadata (entry) {\n  const file = objectToCamel(entry)\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    }\n\n    delete file.mtimeNsecs\n  }\n\n  return file\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\nexport const createLs = configure(api => {\n  /**\n   * @type {FilesAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path')\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        // default long to true, diverges from go-ipfs where its false by default\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      // go-ipfs does not yet support the \"stream\" option\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry))\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result))\n      }\n    }\n  }\n  return ls\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash)\n  }\n\n  delete entry.hash\n\n  entry.type = entry.type === 1 ? 'directory' : 'file'\n\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {FilesAPI[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const body = await res.text()\n    // we don't expect text body to be ever present\n    // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)\n    if (body !== '') {\n      /** @type {Error} */\n      const error = new HTTP.HTTPError(res)\n      error.message = body\n      throw error\n    }\n  }\n  return rm\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {FilesAPI[\"stat\"]}\n   */\n  async function stat (path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(objectToCamelWithMetadata(data))\n  }\n  return stat\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  entry.cid = CID.parse(entry.hash)\n  delete entry.hash\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createTouch = configure(api => {\n  /**\n   * @type {FilesAPI[\"touch\"]}\n   */\n  async function touch (path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return touch\n})\n","import { modeToString } from '../lib/mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createWrite = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n","import { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createLs } from './ls.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRead } from './read.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\nimport { createTouch } from './touch.js'\nimport { createWrite } from './write.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createFiles (config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'Ed25519' }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Keys || []).map((/** @type {any} **/ k) => objectToCamel(k))\n  }\n  return list\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRename = configure(api => {\n  /**\n   * @type {KeyAPI[\"rename\"]}\n   */\n  async function rename (oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return rename\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data.Keys[0])\n  }\n  return rm\n})\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createKey (config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLevel = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return level\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createTail = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n","import { createLevel } from './level.js'\nimport { createLs } from './ls.js'\nimport { createTail } from './tail.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createLog (config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createState = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return state\n})\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createSubs = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPubsub (config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  }\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { createPubsub } from './pubsub/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createName (config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map((/** @type {any} */ link) => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    }\n  }\n  return get\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createLinks = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n","import { configure } from '../lib/configure.js'\nimport { createPut as createDagPut } from '../dag/put.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = createDagPut(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAddLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"addLink\"]}\n   */\n  async function addLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || '',\n          // @ts-expect-error loose types\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n\n  return addLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAppendData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return appendData\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createRmLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createSetData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return setData\n})\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPatch (config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  }\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { createPatch } from './patch/index.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createObject (codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  }\n}\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {string} type\n * @param {string} cid\n * @param {Record<string, string>} metadata\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  }\n\n  if (metadata) {\n    pin.metadata = metadata\n  }\n\n  return pin\n}\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PinAPI[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {any[]} */\n    let paths = []\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths]\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${path}`),\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) { // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\n        }\n        return\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\n    }\n  }\n  return ls\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n","import { createRmAll } from './rm-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport const createRm = (config) => {\n  const all = createRmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n","import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n","import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningAPI[\"rm\"]}\n   */\n  async function rm ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    })\n  }\n\n  return rm\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRmAll (client) {\n  /**\n   * @type {RemotePiningAPI[\"rmAll\"]}\n   */\n  async function rmAll ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    })\n  }\n\n  return rmAll\n}\n","/**\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n */\n\n/**\n * @param {URL} url\n */\nexport function encodeEndpoint (url) {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\n/**\n * @param {any} json\n * @returns {RemotePinServiceWithStat}\n */\nexport function decodeRemoteService (json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && { stat: decodeStat(json.Stat) })\n  }\n}\n\n/**\n * @param {any} json\n * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n */\nexport function decodeStat (json) {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n","import { Client } from '../../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../../../types').Options} config\n */\nexport function createService (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  }\n}\n","import { Client } from '../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\nimport { createService } from './service/index.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createRemote (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  }\n}\n","import { createAddAll } from './add-all.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRmAll } from './rm-all.js'\nimport { createRm } from './rm.js'\nimport { createRemote } from './remote/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPin (config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  }\n}\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return rpcArrayToTextArray(Strings) || []\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n","import { logger } from '@libp2p/logger'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc, rpcToText, rpcToBytes, rpcToBigInt } from '../lib/http-rpc-wire-format.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\nconst log = logger('ipfs-http-client:pubsub:subscribe')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('@libp2p/interfaces/pubsub').Message} Message\n * @typedef {(err: Error, fatal: boolean, msg?: Message) => void} ErrorHandlerFn\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions & { onError?: ErrorHandlerFn }>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createSubscribe = (options, subsTracker) => {\n  return configure((api) => {\n    /**\n     * @type {PubsubAPI[\"subscribe\"]}\n     */\n    async function subscribe (topic, handler, options = {}) { // eslint-disable-line require-await\n      options.signal = subsTracker.subscribe(topic, handler, options.signal)\n\n      /** @type {(value?: any) => void} */\n      let done\n      /** @type {(error: Error) => void} */\n      let fail\n\n      const result = new Promise((resolve, reject) => {\n        done = resolve\n        fail = reject\n      })\n\n      // In Firefox, the initial call to fetch does not resolve until some data\n      // is received. If this doesn't happen within 1 second assume success\n      const ffWorkaround = setTimeout(() => done(), 1000)\n\n      // Do this async to not block Firefox\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      })\n        .catch((err) => {\n          // Initial subscribe fail, ensure we clean up\n          subsTracker.unsubscribe(topic, handler)\n\n          fail(err)\n        })\n        .then((response) => {\n          clearTimeout(ffWorkaround)\n\n          if (!response) {\n            // if there was no response, the subscribe failed\n            return\n          }\n\n          readMessages(response, {\n            onMessage: (message) => {\n              if (!handler) {\n                return\n              }\n\n              if (typeof handler === 'function') {\n                handler(message)\n                return\n              }\n\n              if (typeof handler.handleEvent === 'function') {\n                handler.handleEvent(message)\n              }\n            },\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\n            onError: options.onError\n          })\n\n          done()\n        })\n\n      return result\n    }\n    return subscribe\n  })(options)\n}\n\n/**\n * @param {import('ipfs-utils/src/types').ExtendedResponse} response\n * @param {object} options\n * @param {(message: Message) => void} options.onMessage\n * @param {() => void} options.onEnd\n * @param {ErrorHandlerFn} [options.onError]\n */\nasync function readMessages (response, { onMessage, onEnd, onError }) {\n  onError = onError || log\n\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue\n        }\n\n        onMessage({\n          from: peerIdFromString(msg.from),\n          data: rpcToBytes(msg.data),\n          sequenceNumber: rpcToBigInt(msg.seqno),\n          topic: rpcToText(msg.topicIDs[0])\n        })\n      } catch (/** @type {any} */ err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`\n        onError(err, false, msg) // Not fatal\n      }\n    }\n  } catch (/** @type {any} */ err) {\n    if (!isAbortError(err)) {\n      onError(err, true) // Fatal\n    }\n  } finally {\n    onEnd()\n  }\n}\n\n/**\n * @param {Error & {type?:string}} error\n * @returns {boolean}\n */\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true\n    // It is `abort` in Electron instead of `aborted`\n    case 'abort':\n      return true\n    default:\n      // FIXME: In testing with Chrome, err.type is undefined (should not be!)\n      // Temporarily use the name property instead.\n      return error.name === 'AbortError'\n  }\n}\n","\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createUnsubscribe = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n","\n/**\n * @typedef {import('@libp2p/interfaces/pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n","import { createLs } from './ls.js'\nimport { createPeers } from './peers.js'\nimport { createPublish } from './publish.js'\nimport { createSubscribe } from './subscribe.js'\nimport { createUnsubscribe } from './unsubscribe.js'\nimport { SubscriptionTracker } from './subscription-tracker.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPubsub (config) {\n  const subscriptionTracker = new SubscriptionTracker()\n\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createLocal = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createRepo (config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nexport const createBw = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n","import { createStat as createBitswap } from '../bitswap/stat.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createBw } from './bw.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createStats (config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  }\n}\n","import { Multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs (options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Addrs: Record<string, string[]> }} */\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id: peerIdFromString(id),\n      addrs: (Addrs[id] || []).map(a => new Multiaddr(a))\n    }))\n  }\n  return addrs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createConnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return connect\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createDisconnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n","import { Multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createLocalAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => new Multiaddr(a))\n  }\n  return localAddrs\n})\n","import { Multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: new Multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createSwarm (config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { abortSignal } from './lib/abort-signal.js'\n\n/**\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n * @typedef {import('ipfs-core-types/src/root').AddResult} AddResult\n */\n\nexport const createAddAll = configure((api) => {\n  /**\n   * @type {RootAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body, total, parts } =\n      await multipartRequest(source, controller, options.headers)\n\n    // In browser response body only starts streaming once upload is\n    // complete, at which point all the progress updates are invalid. If\n    // length of the content is computable we can interpret progress from\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\n    // in which case we disable progress updates to be written out.\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\n      ? createProgressHandler(total, parts, options.progress)\n      : [undefined, undefined]\n\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    })\n\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file)\n\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file)\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name)\n      }\n    }\n  }\n  return addAll\n})\n\n/**\n * Returns simple progress callback when content length isn't computable or a\n * progress event handler that calculates progress from upload progress events.\n *\n * @param {number} total\n * @param {{name:string, start:number, end:number}[]|null} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\n */\nconst createProgressHandler = (total, parts, progress) =>\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\n\n/**\n * Creates a progress handler that interpolates progress from upload progress\n * events and total size of the content that is added.\n *\n * @param {number} size - actual content size\n * @param {{name:string, start:number, end:number}[]} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {IPFSUtilsHttpUploadProgressFn}\n */\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0\n  const count = parts.length\n  return ({ loaded, total }) => {\n    // Derive position from the current progress.\n    const position = Math.floor(loaded / total * size)\n    while (index < count) {\n      const { start, end, name } = parts[index]\n      // If within current part range report progress and break the loop\n      if (position < end) {\n        progress(position - start, name)\n        break\n      // If passed current part range report final byte for the chunk and\n      // move to next one.\n      } else {\n        progress(end - start, name)\n        index += 1\n      }\n    }\n  }\n}\n\n/**\n * @param {object} input\n * @param {string} input.name\n * @param {string} input.hash\n * @param {string} input.size\n * @param {string} [input.mode]\n * @param {number} [input.mtime]\n * @param {number} [input.mtimeNsecs]\n */\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\n  /** @type {AddResult} */\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  }\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8)\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    }\n  }\n\n  return output\n}\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport blobToIt from 'blob-to-it'\nimport itPeekable from 'it-peekable'\nimport all from 'it-all'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js'\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    return blobToIt(input)\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    // @ts-expect-error it's (async)iterable\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from './lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport function createAdd (options) {\n  const all = createAddAll(options)\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    async function add (input, options = {}) {\n      // @ts-expect-error - last may return undefined if source is empty\n      return await last(all(normaliseInput(input), options))\n    }\n    return add\n  })(options)\n}\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n","import { configure } from './lib/configure.js'\n\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '')\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    }\n  }\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { Multiaddr } from '@multiformats/multiaddr'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createId = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => new Multiaddr(ma))\n    }\n\n    // @ts-expect-error server output is not typed\n    return output\n  }\n  return id\n})\n","import { createId } from './id.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport const createIsOnline = options => {\n  const id = createId(options)\n\n  /**\n   * @type {RootAPI[\"isOnline\"]}\n   */\n  async function isOnline (options = {}) {\n    const res = await id(options)\n\n    return Boolean(res && res.addresses && res.addresses.length)\n  }\n  return isOnline\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { createStat } from './files/stat.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createLs = configure((api, opts) => {\n  /**\n   * @type {RootAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`\n\n    /**\n     * @param {*} link\n     */\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await createStat(opts)(ipfsPath)\n\n        hash = stats.cid\n      } else {\n        hash = CID.parse(hash)\n      }\n\n      /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n  return ls\n})\n\n/**\n * @param {any} link\n */\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'file'\n  }\n}\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createMount = configure(api => {\n  /**\n   * @type {RootAPI[\"mount\"]}\n   */\n  async function mount (options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return mount\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createPing = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n  return ping\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n","import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RootAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    }\n  }\n\n  return version\n})\n","/* eslint-env browser */\n\nimport { Multibases } from 'ipfs-core-utils/multibases'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { createBitswap } from './bitswap/index.js'\nimport { createBlock } from './block/index.js'\nimport { createBootstrap } from './bootstrap/index.js'\nimport { createConfig } from './config/index.js'\nimport { createDag } from './dag/index.js'\nimport { createDht } from './dht/index.js'\nimport { createDiag } from './diag/index.js'\nimport { createFiles } from './files/index.js'\nimport { createKey } from './key/index.js'\nimport { createLog } from './log/index.js'\nimport { createName } from './name/index.js'\nimport { createObject } from './object/index.js'\nimport { createPin } from './pin/index.js'\nimport { createPubsub } from './pubsub/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createRepo } from './repo/index.js'\nimport { createStats } from './stats/index.js'\nimport { createSwarm } from './swarm/index.js'\nimport { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createCat } from './cat.js'\nimport { createCommands } from './commands.js'\nimport { createDns } from './dns.js'\nimport { createGetEndpointConfig } from './get-endpoint-config.js'\nimport { createGet } from './get.js'\nimport { createId } from './id.js'\nimport { createIsOnline } from './is-online.js'\nimport { createLs } from './ls.js'\nimport { createMount } from './mount.js'\nimport { createPing } from './ping.js'\nimport { createResolve } from './resolve.js'\nimport { createStart } from './start.js'\nimport { createStop } from './stop.js'\nimport { createVersion } from './version.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\n\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').IPFSHTTPClient} IPFSHTTPClient\n */\n\n/**\n * @param {Options} options\n */\nexport function create (options = {}) {\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {MultibaseCodec[]} */\n  const multibaseCodecs = Object.values(bases);\n\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  })\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  /** @type {MultihashHasher[]} */\n  const multihashHashers = Object.values(hashes);\n\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  })\n\n  /** @type {IPFSHTTPClient} */\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  }\n\n  return client\n}\n\nexport { CID } from 'multiformats/cid'\nexport { Multiaddr as multiaddr } from '@multiformats/multiaddr'\nexport { default as urlSource } from 'ipfs-utils/src/files/url-source.js'\nexport const globSource = globSourceImport\n","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});"],"names":["exports","formatArgs","args","this","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","log","debug","require","formatters","j","v","JSON","stringify","message","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","call","logFn","apply","selectColor","extend","Object","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","toNamespace","regexp","toString","substring","length","default","Error","stack","disable","names","map","skips","join","enable","i","split","len","push","slice","name","test","keys","forEach","key","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","fn","ctx","params","Array","arguments","offset","pending","Promise","resolve","reject","err","base64","string","p","charAt","ceil","b64","s64","encode","buffer","start","end","t","parts","chunk","b","fromCharCode","invalidEncoding","decode","undefined","EventEmitter","_listeners","prototype","on","evt","off","listeners","emit","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","e","alloc","size","SIZE","MAX","slab","utf8","read","write","c1","c2","anySignal","signals","controller","globalThis","AbortController","onAbort","abort","signal","removeEventListener","addEventListener","aborted","browserReadableStreamToIt","blob","stream","Response","body","reader","getReader","result","done","value","preventCancel","cancel","releaseLock","encodeRecipient","recipient","encRec","encrypted_key","utils_1","header","decodeRecipient","encoded","fromSplit","protectedHeader","iv","jwe","ciphertext","protected","tag","recipients","aad","unprotected","encJwe","isDagJWS","jose","payload","isArray","signatures","isDagJWE","toGeneral","signing_1","encryption_1","obj","encodedJose","cbor","data","isEncodedJWE","encodeSignature","signature","decodeSignature","link","cid_1","jws","decoded","base64_1","assign","props","code","TypeError","_","ErrClass","create","getPrototypeOf","fetch","Headers","Request","global","getGlobal","isElectron","IS_ENV_WITH_DOM","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","release","IS_WEBWORKER","importScripts","WorkerGlobalScope","IS_TEST","IS_REACT_NATIVE","product","isTest","isElectronMain","isElectronRenderer","isNode","isBrowser","isWebWorker","isEnvWithDom","isReactNative","HTTP","readURLContent","url","http","response","iterator","path","decodeURIComponent","URL","pathname","pop","content","TimeoutError","HTTPError","merge","ignoreUndefined","URLSearchParams","timeout","promise","abortController","now","timedOut","timeoutID","setTimeout","after","next","res","clearTimeout","then","defaults","throwHttpErrors","credentials","opts","resource","headers","base","searchParams","transformSearchParams","json","search","ok","handleError","fromStream","ndjson","transform","method","source","decoder","TextDecoder","lines","l","trim","isNodeReadableStream","iter","Symbol","asyncIterator","return","isWebReadableStream","isAsyncIterable","hasOwnProperty","streamToAsyncIterator","post","put","delete","AbortError","statusText","fetchWithProgress","request","XMLHttpRequest","open","overrideMimeType","setRequestHeader","onabort","onUploadProgress","upload","onprogress","responseType","handleEvent","event","ResponseWithURL","responseURL","status","parseHeaders","getAllResponseHeaders","onerror","onload","ontimeout","send","fetchWithStreaming","input","line","indexOf","versions","electron","URLWithLegacySupport","defaultBase","relative","urlParsed","location","protocolMap","defaultProtocol","protocol","host","super","auth","username","password","query","startsWith","hostname","href","origin","port","toJSON","o","createObjectURL","revokeObjectURL","userPass","all","arr","entry","first","last","func","iterable","symbol","queue","peek","shift","isOptionObject","propertyIsEnumerable","object","writable","defaultMergeOptions","concatArrays","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","clone","array","cloneArray","cloneOptionObject","mergeKeys","merged","config","resultIndex","indices","k","filter","includes","option","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","rpc","roots","LongBits","indexOutOfRange","writeLength","RangeError","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","bytes","constructor","skip","skipType","wireType","BufferReader_","Long","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","requestCtor","responseCtor","callback","asPromise","finish","endedByRPC","zero","toNumber","zzEncode","zeroHash","fromNumber","from","isString","fromString","low","high","unsigned","toLong","fromHash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","newError","CustomError","properties","captureStackTrace","pool","node","emptyArray","freeze","emptyObject","isInteger","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","encoding","allocUnsafe","Op","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","readable","counter","num","out","MAX_SAFE_INTEGER","oldOffset","INT","encodingLength","N1","N2","N3","N4","N5","N6","N7","N8","N9","OverloadYield","AsyncGenerator","gen","front","back","resume","arg","overloaded","nextKey","settle","_invoke","__esModule","kind","inner","waiting","pump","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","ret","thr","async","sync","retry","uintBoundaries","BigInt","readUint8","assertEnoughData","strict","decodeErrPrefix","readUint16","readUint32","readUint64","allowBigInt","decodeUint8","_minor","Token","Type","decodeUint16","decodeUint32","decodeUint64","encodeUint","token","encodeUintValue","major","nuint","buint","encodedSize","compareTokens","tok1","tok2","decodeNegint8","decodeNegint16","decodeNegint32","neg1b","pos1b","decodeNegint64","int","MIN_SAFE_INTEGER","encodeNegint","negint","majorEncoded","toToken","prefix","decodeBytesCompact","minor","_options","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodedBytes","encodeBytes","b1","b2","compare","totLength","tok","retainStringBytes","byteValue","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","decodeUndefined","allowUndefined","coerceUndefinedToNull","decodeBreak","createToken","allowNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","inp","success","float64","encodeFloat16","ui8a","encodeFloat32","dataView","setFloat64","ArrayBuffer","DataView","setUint16","setFloat32","valu32","getUint32","logicalExponent","half","exp","mant","byteOffset","getFloat32","getFloat64","useBuffer","browser","textDecoder","textEncoder","TextEncoder","asU8A","utf8ToBytes","fromArray","concat","chunks","codePoint","units","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","encodeErrPrefix","uintMinorPrefixBytes","need","defaultDecodeOptions","Tokeniser","byt","quick","jump","padStart","encodedLength","DONE","for","BREAK","tokensToObject","tokeniser","terminal","tokenToArray","useMaps","Map","tokenToMap","tags","tagged","tokenizer","typeofs","objectTypeNames","is","typeOf","objectType","objectTypeName","getObjectType","Bl","chunkSize","cursor","maxCursor","_initReuseChunk","topChunk","chunkPos","byts","defaultEncodeOptions","mapSorter","e1","e2","keyToken1","keyToken2","tcmp","cborEncoders","quickEncodeToken","encoders","makeCborEncoders","Ref","parent","simpleTokens","null","true","false","emptyMap","typeEncoders","number","_typ","_refStack","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","createCheck","entries","objectToTokens","typ","isMap","sort","sortMapEntries","customTypeEncoder","tokens","typeEncoder","tokensToEncoded","encodeCustom","quickBytes","encoder","toBytes","invalidMinor","errorer","msg","break","encodeOptions","asCID","cid","CID","cborg","decodeOptions","LOAD_BASE","Multibases","_basesByName","_basesByPrefix","_loadBase","loadBase","bases","addBase","nameOrPrefix","values","LOAD_CODEC","codeOrName","Multicodecs","_codecsByName","_codecsByCode","_loadCodec","loadCodec","codecs","codec","addCodec","LOAD_HASHER","Multihashes","_hashersByName","_hashersByCode","_loadHasher","loadHasher","hashers","hasher","addHasher","decodeVarint","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","fieldNum","Hash","Name","Tsize","maxInt32","maxUInt32","encodeLink","encodeVarint","nameBytes","encodeNode","Data","sov","Links","sizeLink","sizeNode","x","len8tab","len64","pbNodeProperties","pbLinkProperties","linkComparator","a","abuf","bbuf","hasOnlyProperties","some","asLink","pbl","prepare","pbn","validate","createNode","links","createLink","linksBeforeData","decodeNode","Hasher","Digest","digest","JSONEncoder","inRecursive","recurs","elements","isa","_buf","_token","dp","Tokenizer","modeStack","lastToken","ch","startPos","negative","swallow","chars","numStr","readu4","u4","readUtf8Char","ch1","parseString","expect","parseNumber","skipWhitespace","currentMode","parseValue","bytesEncoder","bytesString","cidString","DagJsonTokenizer","tokenBuffer","_next","keyToken","valueToken","innerKeyToken","innerValueToken","cborgJson","_decode","identity","base2","rfc4648","alphabet","bitsPerChar","base8","base10","baseX","base16","base16upper","base36","base36upper","alphabetBytesToChars","reduce","alphabetCharsToBytes","codePointAt","base256emoji","char","sha","crypto","subtle","sha256","sha512","identityBase","base32","base58","hashes","sha2","raw","word","boundry","includeBoundaries","v4","v6segment","v6","v46Exact","v4exact","v6exact","ipRegex","exact","functionTimeout","function_","wrappedFunction","isRegexp","flagMap","ignoreCase","multiline","dotAll","sticky","unicode","clonedRegexp","flags","flag","lastIndex","isMatch","regex","cloneRegexp","isIP","isIPv6","asUint8Array","createCodec","ascii","hex","latin1","binary","isV4","isV6","ip","byte","sections","v4Buffer","uint8ArrayToString","argv","V","codes","createProtocol","resolvable","getProtocol","proto","row","arrays","acc","output","convertToString","ipBuff","ipString","view","getUint16","bytes2ip","bytes2port","varint","bytes2str","address","bytes2mh","bytes2onion","bytes2mb","convertToBytes","ip2bytes","port2bytes","uint8ArrayFromString","uint8ArrayConcat","str2bytes","mh","base58btc","multihash","mh2bytes","addr","portBuf","onion2bytes","onion32bytes","mbstr","mb","anybaseDecoder","mb2bytes","decoders","or","addrBytes","portBytes","tuplesToStringTuples","tuples","tup","protoFromTuple","tuplesToBytes","fromBytes","sizeForAddr","bytesToTuples","ParseError","bytesToString","cleanPath","stringTuplesToString","stringToBytes","part","stringToStringTuples","validateBytes","inspect","DNS_CODES","P2P_CODES","resolvers","Multiaddr","isMultiaddr","transport","protoCodes","family","protos","addrString","lastIndexOf","stringTuples","tuple","ipfs","peerIdStr","uint8ArrayEquals","resolvableProto","find","resolver","errCode","addresses","toOptions","durationRE","unitRatio","nanosecond","ns","us","microsecond","millisecond","second","sec","minute","hour","hr","day","week","wk","month","year","yr","logger","trace","parser","target","readAtomically","readChar","sep","readGivenChar","radix","maxDigits","allowZeroPrefix","maxBytes","digitCount","leadingChar","peekChar","hasLeadingZero","maxValue","digit","ix","readSeparator","readNumber","readGroups","groups","ipv4","readIPv4Addr","group","headSize","headIp4","limit","tailSize","readIPv6Addr","isIPv4","new","parseWith","parseIPv4","parseIPv6","readIPAddr","parseIP","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isView","pbegin","pend","b58","it1","it2","repeat","Encoder","baseEncode","Decoder","baseDecode","prefixCodePoint","text","ComposedDecoder","left","right","Codec","basex","pad","written","SyntaxError","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base58flickr","base64pad","base64url","base64urlpad","encode_1","encodeTo","sizeOffset","digestOffset","cache","WeakMap","baseCache","version","DAG_PB_CODE","SHA_256_CODE","createV0","createV1","other","equals","toStringV0","toStringV1","unknown","aa","bb","ii","equalBytes","encodeCID","cidSymbol","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","toStringTag","codeOffset","hashOffset","DefaultMultiaddr","_DefaultMultiaddr_string","_DefaultMultiaddr_tuples","_DefaultMultiaddr_stringTuples","__classPrivateFieldGet","__classPrivateFieldSet","reduceValue","Reducers","ip4","ip6","tcp","assumeHttp","explicitPort","tcpUri","udp","dnsaddr","dns4","dns6","p2p","https","ws","wss","multiaddrToUri","ma","toUrlString","mergeOpts","DEFAULT_PROTOCOL","DEFAULT_HOST","DEFAULT_PORT","normalizeOptions","agent","apiPath","Agent","getAgent","keepAlive","maxSockets","errorHandler","Message","KEBAB_REGEX","kebabCase","parseTimeout","parseDuration","Client","append","modeToString","mode","parseMtime","mtime","secs","nsecs","Seconds","FractionalNanoseconds","getTime","toUrlSearchParams","hashAlg","mtimeNsecs","urlSearchParams","createWantlist","api","Keys","createWantlistForPeer","peerId","peer","baseDecoder","MARSHALLED_ED225519_PUBLIC_KEY_LENGTH","MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH","PeerIdImpl","privateKey","id","peerIdFromString","RSAPeerIdImpl","publicKey","Ed25519PeerIdImpl","Secp256k1PeerIdImpl","peerIdFromCID","peerIdFromBytes","createStat","toCoreInterface","provideBufLen","ProvideBufLen","wantlist","Wantlist","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived","createUnwant","createBitswap","wantlistForPeer","unwant","stat","createGet","arrayBuffer","_asyncIterator","isBytes","isBlob","isFileObject","isReadableStream","normaliseContent","Blob","browserStreamToIt","peekable","itPeekable","itToBlob","_OverloadYield","_wrapAsyncGenerator","_awaitAsyncGenerator","_asyncGeneratorDelegate","$Reader","$protobuf","$Writer","$util","$root","blocksizes","ks","filesize","hashType","fanout","UnixTime","instance","fromObject","fromValue","toObject","DataType","valuesById","Metadata","MimeType","parseMode","errcode","_readableState","toFileObject","file","normaliseInput","normaliseCandidateMultiple","multipartRequest","formData","FormData","total","fileSuffix","fieldName","qs","encodeURIComponent","File","abortSignal","createPut","Key","createRm","removed","Size","createBlock","rm","createAdd","createClear","createList","createReset","createBootstrap","add","clear","list","createApply","profile","original","OldCfg","updated","NewCfg","objectToCamel","caps","camelObj","createProfiles","Value","createGetAll","getAll","createReplace","createSet","encodeParam","createConfig","profiles","createExport","root","getBlock","getCodec","block","lastCid","remainderPath","createBlockGet","localResolve","createImport","pinRoots","Root","Cid","PinErrorMsg","pinErrorMsg","dagNode","settings","storeCodec","inputCodec","serialized","createResolve","ipfsPath","RemPath","createDag","export","import","mapEvent","ID","messageType","messageName","closer","Responses","Addrs","multiaddrs","protocols","providers","Extra","createFindPeer","createFindProvs","createProvide","cids","recursive","cidArr","createQuery","createDht","findPeer","findProvs","provide","createCmds","createNet","createSys","createDiag","cmds","net","sys","createChmod","createCp","sources","destination","sourceArr","createFlush","objectToCamelWithMetadata","createLs","Entries","createMkdir","createMv","createRead","count","toIterable","WithLocality","createTouch","createWrite","streamChannels","createFiles","chmod","cp","flush","ls","mkdir","mv","touch","exportKey","createGen","pem","createInfo","info","createRename","oldName","newName","createKey","rename","createLevel","subsystem","level","Strings","createTail","createLog","createPublish","Path","createCancel","createState","createSubs","createPubsub","state","subs","createName","publish","pubsub","createData","dataEncoding","createLinks","createNew","template","dagPut","createDagPut","createAddLink","dLink","createAppendData","createRmLink","createSetData","createPatch","addLink","appendData","rmLink","setData","createObject","patch","toPin","pin","metadata","createAddAll","Pins","paths","createRmAll","decodePin","Status","encodeService","service","encodeQuery","force","encodeAddParams","background","origins","client","encodeEndpoint","decodeRemoteService","endpoint","ApiEndpoint","Stat","decodeStat","PinCount","Pinning","Pinned","pinCount","queued","Queued","pinning","pinned","failed","Failed","RemoteServices","createService","createRemote","rmAll","createPin","addAll","remote","rpcArrayToTextArray","strings","rpcToText","rpcToBytes","rpcToBigInt","textToUrlSafeRpc","createPeers","topic","createSubscribe","subsTracker","handler","subscribe","fail","ffWorkaround","catch","unsubscribe","readMessages","onMessage","onEnd","onError","sequenceNumber","seqno","topicIDs","isAbortError","createUnsubscribe","SubscriptionTracker","_subs","topicSubs","unsubs","subscriptionTracker","createLocal","createRefs","refs","argsArr","local","createGc","numObjects","NumObjects","repoSize","RepoSize","repoPath","RepoPath","Version","storageMax","StorageMax","createVersion","createRepo","gc","createBw","stats","totalIn","TotalIn","totalOut","TotalOut","rateIn","RateIn","rateOut","RateOut","createStats","bitswap","repo","bw","createAddrs","addrs","createConnect","createDisconnect","createLocalAddrs","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","createSwarm","connect","disconnect","localAddrs","progress","createProgressHandler","progressFn","createOnUploadProgress","loaded","position","toAsyncIterable","thing","blobToIt","normaliseCandidateSingle","createCat","createCommands","commands","createDns","dns","domain","createGetEndpointConfig","compressionLevel","createId","createIsOnline","mapLink","pathStr","Mode","Mtime","MtimeNsecs","Objects","createMount","createPing","createStart","createStop","multibaseCodecs","ipld","multibases","blockCodecs","dagPB","dagCBOR","dagJSON","dagJOSE","multicodecs","multihashHashers","multihashes","bootstrap","cat","dag","dht","diag","files","getEndpointConfig","isOnline","mount","ping","stop","swarm","globSource","globSourceImport"],"sourceRoot":""}